{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/components/utils/ManageCard.vue?bbfe","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/components/order/OrderPage.vue?4e7b","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/components/utils/CartItem.vue?e806","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/module/types/redduct/product.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/module/types/redduct/cartitem.js","webpack:///./src/components/sell/SellNavigation.vue","webpack:///./src/components/sell/SellNavigation.vue?73a2","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/App.vue?768a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/components/utils/BuyCard.vue?cf6e","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/utils/RouteLink.vue","webpack:///./src/components/utils/RouteLink.vue?58ad","webpack:///./src/components/Sidebar.vue?6c77","webpack:///./src/components/utils/RedductLogo.vue","webpack:///./src/components/utils/RedductLogo.vue?715e","webpack:///./src/App.vue?97f5","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/module/rest.js","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/module/index.js","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fae4","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?3246","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?761e","webpack:///./src/components/utils/FrontPage.vue","webpack:///./src/components/utils/FrontPage.vue?966d","webpack:///./src/components/sell/CreateProduct.vue","webpack:///./src/components/sell/CreateProduct.vue?0ec3","webpack:///./src/components/sell/ManageProduct.vue","webpack:///./src/components/utils/ProductCard.vue","webpack:///./src/components/utils/ProductCard.vue?0488","webpack:///./src/components/sell/ManageProduct.vue?c5a7","webpack:///./src/components/buy/BuyProduct.vue","webpack:///./src/components/utils/BuyCard.vue","webpack:///./src/components/utils/BuyCard.vue?6582","webpack:///./src/components/buy/UtilityBar.vue","webpack:///./src/components/buy/UtilityBar.vue?f343","webpack:///./src/components/buy/BuyProduct.vue?9cd0","webpack:///./src/components/buy/ProductDetails.vue","webpack:///./src/components/buy/ProductDetails.vue?8526","webpack:///./src/components/buy/CartDetails.vue","webpack:///./src/components/utils/CartItem.vue","webpack:///./src/components/utils/CartItem.vue?64c5","webpack:///./src/components/buy/CartDetails.vue?7df6","webpack:///./src/components/order/OrderPage.vue","webpack:///./src/components/order/OrderPage.vue?aaf2","webpack:///./src/components/order/MyOrders.vue","webpack:///./src/components/utils/OrderCard.vue","webpack:///./src/components/utils/OrderCard.vue?a3dc","webpack:///./src/components/order/MyOrders.vue?cc89","webpack:///./src/components/sell/ManageOrders.vue","webpack:///./src/components/utils/ManageCard.vue","webpack:///./src/components/utils/ManageCard.vue?81ef","webpack:///./src/components/sell/ManageOrders.vue?632b","webpack:///./src/components/sell/DoneOrders.vue","webpack:///./src/components/sell/DoneOrders.vue?cb9c","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/components/sell/DoneOrders.vue?2946","webpack:///./src/components/utils/ProductCard.vue?9f4f","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/components/buy/ProductDetails.vue?d188","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/components/utils/RouteLink.vue?9aaa","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/module/types/redduct/order.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/components/buy/CartDetails.vue?6cb1","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/components/sell/CreateProduct.vue?5c69","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/components/buy/UtilityBar.vue?2937","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/components/sell/ManageOrders.vue?1ddd","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/components/order/MyOrders.vue?7360","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/components/buy/BuyProduct.vue?1e61","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/components/sell/SellNavigation.vue?03fb","webpack:///./src/store/generated/sap200/redduct/sap200.redduct.redduct/module/types/redduct/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/components/utils/RedductLogo.vue?3ca9","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/components/utils/FrontPage.vue?0690","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js","webpack:///./src/components/utils/OrderCard.vue?c0bf"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","baseProduct","creator","id","ipfshash","quantity","Product","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseCartitem","producthash","seller","price","Cartitem","class","to","render","__scopeId","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","sidebarOpen","default","route","text","icon","target","anchor","footer","showText","href","props","components","RouteLink","computed","hasWallet","this","$store","hasModule","Sidebar","RedductLogo","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryAllBalances","method","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSend","msgMultiSend","queryClient","baseBalance","Balance","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryBalance","options","subscribe","all","QueryAllBalances","pagination","nextKey","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","msg","sendMsgMultiSend","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1ProposalStatus","V1Beta1VoteOption","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","MsgCreateVestingAccount","msgCreateVestingAccount","V1Order","V1State","sendMsgCreateVestingAccount","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","queryCartitemAll","queryCartitem","queryOrderAll","queryOrder","queryProductAll","queryProduct","MsgUpdateProduct","MsgCreateCartitem","MsgCreateProduct","MsgDeleteOrder","MsgDeleteCartitem","MsgUpdateOrder","MsgUpdateCartitem","MsgCreateOrder","MsgDeleteProduct","msgUpdateProduct","msgCreateCartitem","msgCreateProduct","msgDeleteOrder","msgDeleteCartitem","msgUpdateOrder","msgUpdateCartitem","msgCreateOrder","msgDeleteProduct","V1Beta1BondStatus","OrderAll","CartitemAll","ProductAll","getOrder","getOrderAll","getCartitem","getCartitemAll","getProduct","getProductAll","QueryOrder","QueryOrderAll","QueryCartitem","QueryCartitemAll","QueryProduct","QueryProductAll","sendMsgUpdateProduct","sendMsgCreateCartitem","sendMsgCreateProduct","sendMsgDeleteOrder","sendMsgDeleteCartitem","sendMsgUpdateOrder","sendMsgUpdateCartitem","sendMsgCreateOrder","sendMsgDeleteProduct","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","CosmosCosmosSdkCosmosBankV1Beta1","load","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosBaseV1Beta1","Sap200RedductSap200RedductRedduct","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosEvidenceV1Beta1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","modulePath","moduleType","src","currentImage","slideImage","imageArray","methods","randomNumber","Math","floor","random","seeWhitePaper","location","productName","arrayOfObjects","selected","methodToRunOnSelect","placeholder","closeOnOutsideClick","boolean","rows","cols","imageLinks","imageLink","link","addALink","deleteLastLink","attribute","addAttribute","delAttribute","submit","disabled","style","isLoading","productSKU","productHash","IpfsHash","productId","category","currency","image","sku","ipfsHash","product","refreshCards","deleteProduct","equantity","editQuantity","emits","selectedAccount","$swal","fire","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","position","res","isConfirmed","rawLog","$emit","edit_payload","SellNavigation","ProductCard","ipfsPrefix","getProductHash","new_res","getProductSKU","json","imageSource","productPrice","sellerAddress","productObject","renderDetails","max","maxQuantity","wantQuantity","min","addToCart","links","$router","parseInt","navigateToCart","numberOfItemsInCart","cartList","updateItemCount","updated","BuyCard","UtilityBar","imagesrc","setImage","currImag","item","ProductHash","idInCart","pricetag","getItems","getTotalPrice","priceTotal","navigateToOrders","currImage","removeItem","updateInitialVariables","CartItem","totalPrice","allItemString","refreshPage","takeOrders","allItemJSON","parse","deliveryaddress","paid","totalamount","del_load","del_res","orderList","order","imgsrc","buyerAddress","deliveryAddress","initStatus","orderId","statusDescription","statusCode","isDisabled","OrderCard","orderWithDelivery","retrieveOrders","getProductImage","updateStatus","dropdown","code","event","ManageCard","routerHistory","createWebHistory","routes","component","FrontPage","Types","Relayers","Index","CreateProduct","ManageProduct","BuyProduct","ProductDetails","CartDetails","OrderPage","MyOrders","ManageOrders","DoneOrders","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","VueSweetalert2","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","pop","v4","ownerAddress","desc","sku_object","sku_string","buffer","encoded_sku_string","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","baseOrder","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseMsgCreateOrder","baseMsgUpdateOrder","baseMsgDeleteOrder","baseMsgCreateCartitem","baseMsgUpdateCartitem","baseMsgDeleteCartitem","baseMsgCreateProduct","baseMsgUpdateProduct","baseMsgDeleteProduct","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.43e3e061.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ManageCard.vue?vue&type=style&index=0&id=7b89fe00&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./OrderPage.vue?vue&type=style&index=0&id=6f7fcb5e&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CartItem.vue?vue&type=style&index=0&id=dfafdd9e&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'sap200.redduct.redduct';\nconst baseProduct = { creator: '', id: 0, ipfshash: '', quantity: 0 };\nexport const Product = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.ipfshash !== '') {\n            writer.uint32(26).string(message.ipfshash);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(32).int32(message.quantity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProduct };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.ipfshash = reader.string();\n                    break;\n                case 4:\n                    message.quantity = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.ipfshash !== undefined && object.ipfshash !== null) {\n            message.ipfshash = String(object.ipfshash);\n        }\n        else {\n            message.ipfshash = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.ipfshash !== undefined && (obj.ipfshash = message.ipfshash);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.ipfshash !== undefined && object.ipfshash !== null) {\n            message.ipfshash = object.ipfshash;\n        }\n        else {\n            message.ipfshash = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'sap200.redduct.redduct';\nconst baseCartitem = { creator: '', id: 0, producthash: '', seller: '', price: 0, quantity: 0 };\nexport const Cartitem = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.producthash !== '') {\n            writer.uint32(26).string(message.producthash);\n        }\n        if (message.seller !== '') {\n            writer.uint32(34).string(message.seller);\n        }\n        if (message.price !== 0) {\n            writer.uint32(40).int32(message.price);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(48).int32(message.quantity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCartitem };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.producthash = reader.string();\n                    break;\n                case 4:\n                    message.seller = reader.string();\n                    break;\n                case 5:\n                    message.price = reader.int32();\n                    break;\n                case 6:\n                    message.quantity = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = String(object.producthash);\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = String(object.seller);\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.producthash !== undefined && (obj.producthash = message.producthash);\n        message.seller !== undefined && (obj.seller = message.seller);\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = object.producthash;\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = object.seller;\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n<header>\n    <nav>\n        <ul>\n             <li>\n                <router-link to=\"/sell/createProduct\"><span class=\"bull\">&#9935;</span> Create Product </router-link>\n            </li>\n            <li>\n                <router-link to=\"/sell/manageProduct\"><span class=\"bull\">&#128187;</span> Manage Product </router-link>\n            </li>\n\n              <li>\n                <router-link to=\"/sell/manageOrders\"> <span class=\"bull\">&#128722;</span> Pending Orders </router-link>\n            </li>\n\n             <li>\n                <router-link to=\"/sell/doneOrders\"> <span class=\"bull\">&#128666;</span> Fullfilled Orders </router-link>\n            </li>\n        </ul>\n    </nav>\n</header>\n    \n</template>\n\n<script>\nexport default {\n\n}\n\n</script>\n\n<style scoped>\nheader {\n  width: 100%;\n  height: 5rem;\n  margin: auto;\n  font-size: 5rem;\n}\n\nnav {\n  width: 95%;\n  height: 5rem;\n  margin: 0.2rem auto;\n  border-style:groove;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-right-width: 0;\n  border-color: white;\n}\n\nul {\n  list-style: none;\n  margin: 0.2rem;\n  padding: 0;\n  height: 100%;\n  display: flex;\n  justify-content: left;\n  align-items: left;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-right-width: 0;\n  border-color: gray;\n}\n\nli {\n  margin: 0rem;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-weight: bold;\n  font-size: 1.4rem;\n}\n\na {\n  text-decoration: none;\n  font: inherit;\n  background: transparent;\n  cursor: pointer;\n  color: blueviolet;\n  padding: 0.5rem 1.5rem;\n  display: inline-block;\n  border-color: #f1a80a;\n  border-radius: 0.6rem;\n}\n\na:hover {\n  color: white;\n  font-size: 1.5rem;\n  background-image: linear-gradient(to right, blueviolet, violet);\n  border-radius: 0.3rem;\n}\n\na.router-link-active {\n  color: white;\n  font-size: 1.5rem;\n  background-image: linear-gradient(to right, blueviolet, violet);\n  border-radius: 0.3rem;\n}\n\n\n</style>","import { render } from \"./SellNavigation.vue?vue&type=template&id=c9d6df54&scoped=true\"\nimport script from \"./SellNavigation.vue?vue&type=script&lang=js\"\nexport * from \"./SellNavigation.vue?vue&type=script&lang=js\"\n\nimport \"./SellNavigation.vue?vue&type=style&index=0&id=c9d6df54&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-c9d6df54\"\n\nexport default script","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=6e833961&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BuyCard.vue?vue&type=style&index=0&id=835efc6a&scoped=true&lang=css\"","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<RedductLogo />\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\nimport RedductLogo from './components/utils/RedductLogo.vue'\n\nexport default {\n\tcomponents: {\n\t\tSidebar,\n\t\tRedductLogo\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<RouteLink route=\"/\" text=\"Home\" icon=\"&#127968;\" />\n\t\t\t<RouteLink route=\"/wallet\" text=\"Wallet\" icon=\"&#128179;\" />\n\t\t\t<RouteLink route=\"/sell\" text=\"Sell\" icon=\"&#128176;\" />\n\t\t\t<RouteLink route=\"/relayers\" text=\"Relayers\" icon=\"&#9939;\" />\n\t\t\t<RouteLink route=\"/buy/buyProduct\" text=\"Buy\" icon=\"&#128722;\" />\n\t\t\t<RouteLink route=\"/myorders\" text=\"My Orders\" icon=\"&#9981;\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<RouteLink\n\t\t\t\troute=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"&#128210;\"\n\t\t\t\tanchor=\"true\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nimport RouteLink from './utils/RouteLink.vue'\n\nexport default {\n\tname: 'Sidebar',\n\n\tcomponents: {\n\t\tRouteLink\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","<template>\n    <section v-if=\"!anchor\">\n\t\t<router-link :to=\"route\"> <span class=\"bull\">{{icon}}</span> {{text}} </router-link>\n\t</section>\n    <section v-else>\n\t\t<a :href=\"route\" :target=\"target\"> <span class=\"bull\">{{icon}}</span> {{text}} </a>\n\t</section>\n    \n</template>\n\n<script>\nexport default {\n    props: {\n       route : String,\n       icon : String,\n       text : String,\n       target: String,\n       anchor: Boolean\n    }\n}\n</script>\n\n<style scoped>\n\n    section {\n        margin-bottom: 2rem;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n\n    a {\n        text-decoration: none;\n        font: inherit;\n        background: transparent;\n        cursor: pointer;\n        color: black;\n        padding: 0.5rem 0.5rem;\n        display: inline-block;\n        border-color: #f1a80a;\n        border-radius: 0.6rem;\n        font-size: 1.7rem;\n        width: 100%;\n    }\n\n    a:hover {\n        color: white;\n        font-size: 2rem;\n        background-image: linear-gradient(to left, blueviolet, violet, purple);\n        border-radius: 0.3rem;\n    }\n\n    a.router-link-active {\n        color: white;\n        font-size: 2rem;\n        background-image: linear-gradient(to left, blueviolet, violet, purple);\n        border-radius: 0.3rem;\n    }\n\n</style>","import { render } from \"./RouteLink.vue?vue&type=template&id=3b80b4bc&scoped=true\"\nimport script from \"./RouteLink.vue?vue&type=script&lang=js\"\nexport * from \"./RouteLink.vue?vue&type=script&lang=js\"\n\nimport \"./RouteLink.vue?vue&type=style&index=0&id=3b80b4bc&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-3b80b4bc\"\n\nexport default script","import { render } from \"./Sidebar.vue?vue&type=template&id=526acba4\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <div id=\"logo\">\n        <h2> <span id=\"red\">Red</span><span id=\"duct\">Duct</span></h2>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n}\n</script>\n\n<style scoped>\n#red {\n    color: red;\n}\n\n#duct {\n    color: yellow;\n}\n\n#logo {\n    background-image: linear-gradient(to left, blueviolet,skyblue, blue, darkblue);\n    padding: 0.75rem;\n    margin: 1rem auto;\n    margin-top: 0rem;\n    margin-bottom: 0rem;\n    width: 100%;\n    text-align: left;\n    font-size: 1.7rem;\n}\n</style>","import { render } from \"./RedductLogo.vue?vue&type=template&id=fd3f2194&scoped=true\"\nimport script from \"./RedductLogo.vue?vue&type=script&lang=js\"\nexport * from \"./RedductLogo.vue?vue&type=script&lang=js\"\n\nimport \"./RedductLogo.vue?vue&type=style&index=0&id=fd3f2194&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-fd3f2194\"\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=6e833961\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6e833961&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title redduct/cartitem.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCartitemAll\n         * @summary Queries a list of cartitem items.\n         * @request GET:/sap200/redduct/redduct/cartitem\n         */\n        this.queryCartitemAll = (query, params = {}) => this.request({\n            path: `/sap200/redduct/redduct/cartitem`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCartitem\n         * @summary Queries a cartitem by id.\n         * @request GET:/sap200/redduct/redduct/cartitem/{id}\n         */\n        this.queryCartitem = (id, params = {}) => this.request({\n            path: `/sap200/redduct/redduct/cartitem/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOrderAll\n         * @summary Queries a list of order items.\n         * @request GET:/sap200/redduct/redduct/order\n         */\n        this.queryOrderAll = (query, params = {}) => this.request({\n            path: `/sap200/redduct/redduct/order`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOrder\n         * @summary Queries a order by id.\n         * @request GET:/sap200/redduct/redduct/order/{id}\n         */\n        this.queryOrder = (id, params = {}) => this.request({\n            path: `/sap200/redduct/redduct/order/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProductAll\n         * @summary Queries a list of product items.\n         * @request GET:/sap200/redduct/redduct/product\n         */\n        this.queryProductAll = (query, params = {}) => this.request({\n            path: `/sap200/redduct/redduct/product`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProduct\n         * @summary Queries a product by id.\n         * @request GET:/sap200/redduct/redduct/product/{id}\n         */\n        this.queryProduct = (id, params = {}) => this.request({\n            path: `/sap200/redduct/redduct/product/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateProduct } from \"./types/redduct/tx\";\nimport { MsgCreateCartitem } from \"./types/redduct/tx\";\nimport { MsgCreateProduct } from \"./types/redduct/tx\";\nimport { MsgDeleteOrder } from \"./types/redduct/tx\";\nimport { MsgDeleteCartitem } from \"./types/redduct/tx\";\nimport { MsgUpdateOrder } from \"./types/redduct/tx\";\nimport { MsgUpdateCartitem } from \"./types/redduct/tx\";\nimport { MsgCreateOrder } from \"./types/redduct/tx\";\nimport { MsgDeleteProduct } from \"./types/redduct/tx\";\nconst types = [\n    [\"/sap200.redduct.redduct.MsgUpdateProduct\", MsgUpdateProduct],\n    [\"/sap200.redduct.redduct.MsgCreateCartitem\", MsgCreateCartitem],\n    [\"/sap200.redduct.redduct.MsgCreateProduct\", MsgCreateProduct],\n    [\"/sap200.redduct.redduct.MsgDeleteOrder\", MsgDeleteOrder],\n    [\"/sap200.redduct.redduct.MsgDeleteCartitem\", MsgDeleteCartitem],\n    [\"/sap200.redduct.redduct.MsgUpdateOrder\", MsgUpdateOrder],\n    [\"/sap200.redduct.redduct.MsgUpdateCartitem\", MsgUpdateCartitem],\n    [\"/sap200.redduct.redduct.MsgCreateOrder\", MsgCreateOrder],\n    [\"/sap200.redduct.redduct.MsgDeleteProduct\", MsgDeleteProduct],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateProduct: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgUpdateProduct\", value: data }),\n        msgCreateCartitem: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgCreateCartitem\", value: data }),\n        msgCreateProduct: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgCreateProduct\", value: data }),\n        msgDeleteOrder: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgDeleteOrder\", value: data }),\n        msgDeleteCartitem: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgDeleteCartitem\", value: data }),\n        msgUpdateOrder: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgUpdateOrder\", value: data }),\n        msgUpdateCartitem: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgUpdateCartitem\", value: data }),\n        msgCreateOrder: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgCreateOrder\", value: data }),\n        msgDeleteProduct: (data) => ({ typeUrl: \"/sap200.redduct.redduct.MsgDeleteProduct\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Cartitem } from \"./module/types/redduct/cartitem\";\nimport { Order } from \"./module/types/redduct/order\";\nimport { Product } from \"./module/types/redduct/product\";\nexport { Cartitem, Order, Product };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Order: {},\n        OrderAll: {},\n        Cartitem: {},\n        CartitemAll: {},\n        Product: {},\n        ProductAll: {},\n        _Structure: {\n            Cartitem: getStructure(Cartitem.fromPartial({})),\n            Order: getStructure(Order.fromPartial({})),\n            Product: getStructure(Product.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getOrder: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Order[JSON.stringify(params)] ?? {};\n        },\n        getOrderAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.OrderAll[JSON.stringify(params)] ?? {};\n        },\n        getCartitem: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Cartitem[JSON.stringify(params)] ?? {};\n        },\n        getCartitemAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CartitemAll[JSON.stringify(params)] ?? {};\n        },\n        getProduct: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Product[JSON.stringify(params)] ?? {};\n        },\n        getProductAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ProductAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: sap200.redduct.redduct initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryOrder({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOrder(key.id)).data;\n                commit('QUERY', { query: 'Order', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOrder', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOrder']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOrder', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOrderAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOrderAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOrderAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'OrderAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOrderAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOrderAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOrderAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCartitem({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCartitem(key.id)).data;\n                commit('QUERY', { query: 'Cartitem', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCartitem', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCartitem']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCartitem', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCartitemAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCartitemAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCartitemAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'CartitemAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCartitemAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCartitemAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCartitemAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProduct({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProduct(key.id)).data;\n                commit('QUERY', { query: 'Product', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProduct', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProduct']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProduct', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProductAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProductAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProductAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ProductAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProductAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProductAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProductAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateProduct({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateProduct(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateProduct:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateProduct:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateCartitem({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateCartitem(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateCartitem:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateCartitem:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateProduct({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateProduct(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateProduct:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateProduct:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteOrder({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteOrder(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteOrder:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteCartitem({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteCartitem(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteCartitem:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteCartitem:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateOrder({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateOrder(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateOrder:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateCartitem({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateCartitem(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateCartitem:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateCartitem:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateOrder({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateOrder(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateOrder:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteProduct({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteProduct(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteProduct:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteProduct:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateProduct({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateProduct(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateProduct:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateProduct:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateCartitem({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateCartitem(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateCartitem:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateCartitem:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateProduct({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateProduct(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateProduct:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateProduct:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteOrder({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteOrder(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteOrder:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteCartitem({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteCartitem(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteCartitem:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteCartitem:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateOrder({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateOrder(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateOrder:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateCartitem({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateCartitem(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateCartitem:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateCartitem:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateOrder({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateOrder(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateOrder:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateOrder:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteProduct({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteProduct(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteProduct:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteProduct:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport Sap200RedductSap200RedductRedduct from './sap200/redduct/sap200.redduct.redduct';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nexport default {\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    Sap200RedductSap200RedductRedduct: load(Sap200RedductSap200RedductRedduct, 'sap200.redduct.redduct'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"sap200.redduct.redduct\" moduleType=\"Order\"  />\n\t\t<SpType modulePath=\"sap200.redduct.redduct\" moduleType=\"Cartitem\"  />\n\t\t<SpType modulePath=\"sap200.redduct.redduct\" moduleType=\"Product\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=edee049c\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n<div>\n    <section id=\"main\">\n         <section id=\"details\">\n            <div id=\"content\">  \n                <h1>Redduct</h1><h1>Store</h1>\n                <p>\n                Your painting or a handicraft have value. So get it directly in IPCP. \n                Usually a person needs to work, earn money (fiat) then hardly exchange it in crypto. \n                This market makes it extremely easy for seller to buy and sell in IPCP.\n                Promoting Token economy\n                </p>\n            </div> \n            \n             <img :src=\"currentImage\" @click=\"slideImage()\"/>\n         </section>\n\n\n          <a href=\"https://ipfs.io/ipfs/Qmdhyf5dBPoQs5fmX6rk4TyjaCWKPAAG5ucmDWMvsiZcTq?filename=redduct-wp.pdf\" target=\"blank\"> <strong>White Paper</strong> </a>\n\n    </section>\n\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            currentImage: \"https://miro.medium.com/max/6000/1*5kRCNXmpxrRwTgR2hNJxvg.jpeg\",\n            imageArray: [\n                'https://miro.medium.com/max/6000/1*5kRCNXmpxrRwTgR2hNJxvg.jpeg',\n                'https://devops.com/wp-content/uploads/2020/04/Blockchain-Debate-1280x720.jpg',\n                \"https://s27389.pcdn.co/wp-content/uploads/2019/08/four-unexpected-blockchain-use-cases.jpeg\",\n            ],\n        }\n    },\n\n    methods: {\n        slideImage() {\n            const randomNumber = Math.floor(Math.random() * this.imageArray.length);\n            this.currentImage = this.imageArray[randomNumber];\n        },\n\n        seeWhitePaper() {\n            console.log(\"White Paper\")\n            location.href=\"https://www.javascripttutorial.net/\"\n            location.target=\"blank\"\n        }\n    }\n\n}\n\n</script>\n\n<style scoped>\n#main {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 1);\n  margin: 1rem auto;\n  border-radius: 10px;\n  padding: 4rem;\n  width: 85%;\n  max-width: 100%;\n  background-color: white;\n  margin-top: 3rem;\n}\n\n#details {\n    width: 95%;\n    color: blueviolet;\n    padding: 1rem;\n    font-size: 1rem;\n    display: flex;\n    justify-content: left;\n    align-items: left;\n}\n\n#details:hover {\n    color: blue;\n}\n\nh1 {\n    font-size: 5rem;\n    margin-top: 5rem;\n    text-align: left;\n    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n}\n\n#content {\n    text-align: left;\n    font-size: 2.5rem;\n    font-family: cursive;\n    width: 30%;\n}\n\na {\n  border-style:hidden;\n  border-radius: 2.6rem;\n  background-image: linear-gradient(pink, magenta);\n  padding: 2;\n  display: inline-block;\n  width: 20rem;\n  height: 5rem;\n  cursor: pointer;\n  color: white;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  margin-left: 10px;\n  text-align: center;\n  font-size: 1.6rem;\n  text-decoration: none;\n}\n\nimg {\n    margin-top: 2rem;\n    margin-left: 3rem;\n    width: 90%;\n    height: 80%;\n    border-radius: 4rem;\n    padding: 2px;\n    opacity: 0.9;\n    background-color: magenta;\n    border-style: hidden;\n\n}\n\nimg:hover {\n    transform: scaleX(-1);\n    cursor: pointer;\n}\n\na:hover {\n    background-image: linear-gradient(magenta, pink);\n}\n\n</style>","import { render } from \"./FrontPage.vue?vue&type=template&id=13a0f6f0&scoped=true\"\nimport script from \"./FrontPage.vue?vue&type=script&lang=js\"\nexport * from \"./FrontPage.vue?vue&type=script&lang=js\"\n\nimport \"./FrontPage.vue?vue&type=style&index=0&id=13a0f6f0&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-13a0f6f0\"\n\nexport default script","<template>\n\t<div id=\"main\">\n\t\t<SellNavigation />\n\t\t<form @submit.prevent>\n\t\t\t<fieldset>\n\t\t\t\t<legend>&#10024; &nbsp; Create your product</legend>\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> Enter the name of product </label>\n\t\t\t\t\t<div class=\"cl-input\">\n\t\t\t\t\t\t<input type=\"text\" v-model=\"productName\" />\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> Category </label>\n\t\t\t\t\t<div class=\"cl-input\">\n\t\t\t\t\t\t<dropdown\n\t\t\t\t\t\t\tclass=\"my-dropdown-toggle\"\n\t\t\t\t\t\t\t:options=\"arrayOfObjects\"\n\t\t\t\t\t\t\t:selected=\"object\"\n\t\t\t\t\t\t\tv-on:updateOption=\"methodToRunOnSelect\"\n\t\t\t\t\t\t\t:placeholder=\"'Select an Item'\"\n\t\t\t\t\t\t\t:closeOnOutsideClick=\"boolean\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> What price you wanna sell</label>\n\t\t\t\t\t<div class=\"cl-input\">\n\t\t\t\t\t\t<input type=\"text\" v-model=\"price\" />\n\t\t\t\t\t\t<label> ipcp </label>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> Description </label>\n\t\t\t\t\t<div class=\"cl-input-textarea\">\n\t\t\t\t\t\t<textarea rows=\"15\" cols=\"92\" v-model=\"description\" />\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> Add Links for Images </label>\n\t\t\t\t\t<div class=\"cl-input\" v-for=\"(imageLink, index) in imageLinks\" :key=\"'imageLink.link' + index\">\n\t\t\t\t\t\t<input type=\"text\" v-model=\"imageLink.link\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button class=\"add-link\" @click=\"addALink\">&#10133; &nbsp; Add Link</button>\n\t\t\t\t\t<button class=\"add-link\" @click=\"deleteLastLink\">&#10134; &nbsp; Remove Link</button>\n\t\t\t\t</section>\n\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> Quantity </label>\n\t\t\t\t\t<div class=\"cl-input\">\n\t\t\t\t\t\t<input type=\"number\" v-model=\"quantity\" />\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section class=\"card\">\n\t\t\t\t\t<label> Attributes </label><br />\n\t\t\t\t\t<div class=\"cl-input\" v-for=\"(attribute, index) in attributes\" :key=\"'attribute.key' + 'attribute.value' + index\">\n\t\t\t\t\t\t<label> Key </label> <input type=\"text\" class=\"cl-input-attribute\" v-model=\"attribute.key\" /> <label> Value </label>\n\t\t\t\t\t\t<input type=\"text\" class=\"cl-input-attribute\" v-model=\"attribute.value\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button class=\"add-link\" @click=\"addAttribute\">&#10133; &nbsp; Add Attribute</button>\n\t\t\t\t\t<button class=\"add-link\" @click=\"delAttribute\">&#10134; &nbsp; Del Attribute</button>\n\t\t\t\t</section>\n\n\t\t\t\t<button class=\"submit\" @click=\"submit\" :disabled=\"!address\">&#128296; &nbsp; Create Product</button>\n\t\t\t</fieldset>\n\t\t</form>\n\t</div>\n</template>\n\n<script>\nimport dropdown from 'vue-dropdowns'\nimport SellNavigation from './SellNavigation.vue'\nimport { uuid } from 'vue-uuid'\n\nexport default {\n\t/* eslint-disable */\n\tcomponents: {\n\t\tdropdown,\n\t\tSellNavigation\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tarrayOfObjects: [{ name: 'electronics' }, {name: 'utilities'}, {name: 'textiles'}, {name: 'shoes'}, {name: 'miscallenous'}, {name: 'other'}],\n\t\t\tobject: {\n\t\t\t\tname: 'other'\n\t\t\t},\n\t\t\tproductName: '',\n\t\t\tprice: 0,\n\t\t\timageLinks: [{ link: '' }],\n\t\t\tquantity: 0,\n\t\t\tattributes: [{ key: '', value: '' }],\n\t\t\tdescription: ''\n\t\t}\n\t},\n\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t},\n\t},\n\n\tmethods: {\n\n\t\tmethodToRunOnSelect(payload) {\n\t\t\tthis.object = payload\n\t\t},\n\n\t\taddALink() {\n\t\t\tthis.imageLinks = [...this.imageLinks, { link: '' }]\n\t\t},\n\n\t\tdeleteLastLink() {\n\t\t\tthis.imageLinks.pop()\n\t\t},\n\n\t\taddAttribute() {\n\t\t\tthis.attributes = [...this.attributes, { key: '', value: '' }]\n\t\t},\n\n\t\tdelAttribute() {\n\t\t\tthis.attributes.pop()\n\t\t},\n\n\t\tasync submit() {\n\t\t\tvar index\n\t\t\tvar productId = String(uuid.v4())\n\t\t\tconst date = new Date()\n\t\t\tvar created = Math.floor(date.getTime() / 1000)\n\t\t\tvar ownerAddress = this.address\n\t\t\tvar productName = this.productName\n\t\t\tvar category = this.object.name\n\t\t\tvar price = this.price\n\t\t\tvar currency = 'ipcp'\n\t\t\tvar imageLinks = this.imageLinks\n\t\t\tvar attributes = this.attributes\n\t\t\tvar quantity = this.quantity\n\t\t\tvar updated = created\n\t\t\tvar desc = this.description\n\n\t\t\t// basic checks\n\t\t\tif (productName == '') {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ttitle: 'Missing Product Name',\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\tposition: 'bottom-end',\n\t\t\t\t\ttext: 'Product Name cannot be empty'\n\t\t\t\t})\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (quantity == 0) {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ttitle: 'Missing Quantity',\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\tposition: 'bottom-end',\n\t\t\t\t\ttext: 'Quantity cannot be 0'\n\t\t\t\t})\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (imageLinks[0].link == '') {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ttitle: 'Missing Image Link',\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\tposition: 'bottom-end',\n\t\t\t\t\ttext: 'Provide at least one link'\n\t\t\t\t})\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (attributes[0].key == '' || attributes[0].value == '') {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ttitle: 'Missing Attributes',\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\tposition: 'bottom-end',\n\t\t\t\t\ttext: 'Provide at least one Attribute'\n\t\t\t\t})\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar sku_object = {\n\t\t\t\tproductId: productId,\n\t\t\t\tcreated: created,\n\t\t\t\townerAddress: ownerAddress,\n\t\t\t\tproductName: productName,\n\t\t\t\tcategory: category,\n\t\t\t\tprice: price,\n\t\t\t\tcurrency: currency,\n\t\t\t\timageLinks: imageLinks,\n\t\t\t\tattributes: attributes,\n\t\t\t\tupdated: updated,\n\t\t\t\tdescription: desc\n\t\t\t}\n\n\t\t\tvar sku_string = JSON.stringify(sku_object)\n\t\t\tvar buffer = new Buffer(sku_string)\n\t\t\tlet encoded_sku_string = buffer.toString('hex')\n\t\t\tconsole.log(encoded_sku_string)\n\n\t\t\t// send the string to blockchain module for creating product\n\t\t\tif (this.address != '') {\n\t\t\t\tthis.$swal\n\t\t\t\t\t.fire({\n\t\t\t\t\t\ttitle: 'You are about to create a product',\n\t\t\t\t\t\ttext: sku_string,\n\t\t\t\t\t\ticon: 'question',\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tconfirmButtonColor: 'blueviolet',\n\t\t\t\t\t\tcancelButtonColor: 'orange',\n\t\t\t\t\t\tconfirmButtonText: 'Yes, Make Product',\n\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t})\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\tlet payload = {\n\t\t\t\t\t\t\t\tcreator: this.address,\n                                ipfshash: encoded_sku_string,\n                                quantity: quantity\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole.log(payload)\n\t\t\t\t\t\t\t// redduct.redduct.redduct/SendMsgCreateProduct\n\t\t\t\t\t\t\tlet result = await this.$store.dispatch('sap200.redduct.redduct/sendMsgCreateProduct', { value: payload, fee: [] })\n\n\t\t\t\t\t\t\tconsole.log(result)\n\n\t\t\t\t\t\t\tthis.$swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Transaction Log',\n\t\t\t\t\t\t\t\ttext: result.rawLog,\n\t\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.$swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Cancelled',\n\t\t\t\t\t\t\t\ttext: \"You don't want to create this product\",\n\t\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\ttitle: 'Wallet Not Connected',\n\t\t\t\t\ttext: 'Please sign in and connect to your wallet.',\n\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style scoped>\nform {\n\t/* box-shadow: 0 2px 8px rgba(0, 0, 0, 1); */\n\tmargin: 1rem auto;\n\t/* border-radius: 1rem; */\n\tpadding: 3rem;\n\ttext-align: left;\n\twidth: 70%;\n\tmax-width: 100rem;\n\t/* background-image: linear-gradient(-45deg, rgb(226, 215, 215), white); */\n\tmargin-top: 5rem;\n}\n\nfieldset {\n\tborder: 0;\n}\n\n.card {\n\tbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.5);\n\tborder-radius: 0.1rem;\n\tpadding: 2rem;\n\tmargin-bottom: 1rem;\n\tbackground-color: white;\n}\n\ntextarea {\n\tmargin-top: 1.5rem;\n\tborder-radius: 0.7rem;\n\toutline: none;\n}\n\ninput {\n\tborder: 0;\n\tborder-bottom: 1px solid #555;\n\tbackground: transparent;\n\tborder-color: lightsalmon;\n\twidth: 80%;\n\tpadding: 1rem;\n}\n\nsection {\n\tmargin-top: 3rem;\n\tfont-size: 1.7rem;\n\tmargin-bottom: 3rem;\n}\n\nlegend {\n\ttext-align: center;\n\tfont-size: 3rem;\n\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\n\tbackground-image: linear-gradient(45deg, blueviolet, violet);\n\tcolor: white;\n\tpadding: 1.5rem;\n\tborder-radius: 0.4rem;\n}\n\n.cl-input {\n\tmargin-top: 1rem;\n\twidth: 80%;\n}\n\n.cl-input-attribute {\n\twidth: 30%;\n\tmargin-right: 1rem;\n}\n\n.my-dropdown-toggle {\n\tborder-radius: 5px;\n\twidth: 80%;\n\tborder-color: lightsalmon;\n}\n\nlabel {\n\twidth: 80%;\n\tpadding: 1rem;\n}\n\nimg {\n\twidth: 40%;\n\tborder-radius: 2rem;\n}\n\nbutton {\n\tfont: inherit;\n\tcursor: pointer;\n\tborder: 1px solid;\n\tbackground-image: linear-gradient(45deg, blueviolet, violet);\n\tcolor: white;\n\tpadding: 1.5rem;\n\tbox-shadow: 1px 1px 2px rgba(0, 0, 0, 0.26);\n\tfont-size: 1.6rem;\n\tborder-radius: 2.5rem;\n\tborder-width: 0;\n\twidth: 20rem;\n\tmargin-top: 1rem;\n\tmargin-right: 1rem;\n}\n\nbutton:hover {\n\tbackground-image: linear-gradient(-45deg, blueviolet, violet);\n}\n\nbutton:disabled,\nbutton[disabled]{\n  border: 1px solid #999999;\n  background-image: linear-gradient(to right, gray, darkgrey);\n  color: black;\n  cursor:auto;\n}\n\n.submit {\n\tfloat: right;\n}\n\n.add-link {\n\tpadding: 0.8rem;\n\tfont-size: 1.5rem;\n\twidth: 15rem;\n\tmargin-top: 1rem;\n}\n</style>","import { render } from \"./CreateProduct.vue?vue&type=template&id=b9b6c246&scoped=true\"\nimport script from \"./CreateProduct.vue?vue&type=script&lang=js\"\nexport * from \"./CreateProduct.vue?vue&type=script&lang=js\"\n\nimport \"./CreateProduct.vue?vue&type=style&index=0&id=b9b6c246&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-b9b6c246\"\n\nexport default script","/* eslint-disable */\n<template>\n\t<div id=\"main\">\n\t\t<SellNavigation />\n\t\t<p v-if=\"isLoading\" style=\"text-align: center; font-size: 3rem; margin-top: 5rem\">Loading...</p>\n\t\t<div class=\"block\" style=\"margin-top: 5rem\">\n\t\t\t<ul> \n\t\t\t\t<li v-for=\"obj in this.productSKU\" :key=\"obj.productHash.IpfsHash\">\n\t\t\t\t\t<ProductCard\n\t\t\t\t\t\t:id=\"obj.data.productId\"\n\t\t\t\t\t\t:name=\"obj.data.productName\"\n\t\t\t\t\t\t:category=\"obj.data.category\"\n\t\t\t\t\t\t:price=\"obj.data.price + ' ' + obj.data.currency\"\n\t\t\t\t\t\t:image=\"obj.data.imageLinks[0].link\"\n\t\t\t\t\t\t:quantity=\"obj.productHash.quantity\"\n\t\t\t\t\t\t:sku=\"obj.data\"\n\t\t\t\t\t\t:ipfsHash=\"obj.productHash.ipfshash\"\n\t\t\t\t\t\t:product=\"obj.productHash\"\n\t\t\t\t\t\t@product-deleted=\"refreshCards\"\n                        @product-updated=\"refreshCards\"\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n/* eslint-disable */\nimport SellNavigation from './SellNavigation.vue'\nimport ProductCard from '../utils/ProductCard.vue'\n\nexport default {\n\tcomponents: {\n\t\tSellNavigation,\n\t\tProductCard\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tproductHash: [],\n\t\t\tproductSKU: [],\n\t\t\tmodulePath: 'sap200.redduct.redduct',\n\t\t\tmoduleType: 'Product',\n\t\t\tipfsPrefix: 'https://ipfs.io/ipfs/',\n\t\t\tisLoading: false\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n\tmethods: {\n\t\tasync getProductHash() {\n\t\t\tthis.isLoading = true\n\t\t\ttry {\n\t\t\t\tlet res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', { options: {} })\n\t\t\t\tlet new_res = await res.Product.filter((v) => v.creator == this.selectedAccount)\n                this.productHash = await new_res\n\n\t\t\t\t// Get the Ipfs hash\n\n\t\t\t\tfor (var i = 0; i < this.productHash.length; i++) {\n\t\t\t\t\tawait this.getProductSKU(this.productHash[i])\n\t\t\t\t}\n\n                this.isLoading = await false\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e)\n\t\t\t\tthis.productHash = []\n\t\t\t}\n\t\t},\n\n\t\tasync getProductSKU(productHash) {\n\t\t\tif (productHash.ipfshash) {\n\t\t\t\tvar response = await fetch(this.ipfsPrefix + productHash.ipfshash)\n\t\t\t\tvar data\n\n\t\t\t\ttry {\n                    data = await response.json()\n                    console.log(data)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tif (data) {\n\t\t\t\t\tthis.productSKU.push({ productHash: productHash, data: data })\n                }\n                await console.log(this.productSKU)\n\t\t\t}\n\t\t},\n\n\t\trefreshCards() {\n\t\t\tthis.productHash = []\n\t\t\tthis.productSKU = []\n\t\t\tthis.getProductHash()\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.getProductHash()\n\t}\n}\n</script>","<template>\n        <section class=\"displayCard\">\n              <div class=\"section\">\n                <section class=\"header\"> <span>IPFS Hash</span> </section>\n                <section class=\"value\"> <input type=\"text\" :value=\"ipfsHash\" disabled=\"true\"/> </section>\n                <button @click=\"deleteProduct\"> Delete </button>\n            </div>\n             <div class=\"section\">\n                <section class=\"header\"> <span>Product Id</span> </section>\n                <section class=\"value\"> {{id}} </section>\n            </div>\n            <div class=\"section\">\n                <section class=\"header\"> <span>Name</span> </section>\n                <section class=\"value\"> {{name}} </section>\n            </div>\n            <div class=\"section\">\n                <section class=\"header\"> <span>Category</span> </section>\n                <section class=\"value\"> {{category}}</section>\n            </div>\n            <div class=\"section\">\n                <section class=\"header\"> <span>Price</span></section>\n                <section class = \"value\">{{price}}</section>\n            </div>\n            <div class=\"section\">\n                <section class=\"header\"> <span>Image</span> </section>\n                <section class = \"value\"> <img :src=\"image\" /> </section>\n            </div>\n            <div class=\"section\">\n                <section class=\"header\"><span> Quantity </span></section>\n                <section> <input type=\"number\" class = \"value\" v-model=\"equantity\" /> </section>\n                <button @click=\"editQuantity\"> Edit </button>\n            </div>\n              <!-- <div class=\"section\">\n                <section class=\"header\"><span> SKU </span></section>\n                <section class = \"value\"> {{sku}} </section>\n            </div> -->\n\n        </section>\n</template>\n\n<script>\n\nexport default {\n\n    /* eslint-disable */\n\n    props: {\n        id: String,\n        name: String,\n        category: String,\n        price: String,\n        image: String, \n        quantity: Number,\n        sku: String,\n        ipfsHash: String,\n        product: Object\n    },\n\n    data() {\n        return {\n            equantity: this.quantity\n        };\n    },\n\n    emits:['product-deleted', 'product-updated'],\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        deleteProduct() {\n            console.log(this.product)\n            // To deletea product issue a request for its deletion in message...\n            if (this.selectedAccount) {\n                this.$swal.fire({\n                        title: 'Delete Product',\n\t\t\t\t\t\ttext: JSON.stringify(this.product),\n\t\t\t\t\t\ticon: 'question',\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tconfirmButtonColor: 'blueviolet',\n\t\t\t\t\t\tcancelButtonColor: 'orange',\n\t\t\t\t\t\tconfirmButtonText: 'Yes, Delete',\n\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t}).then(async (res) => {\n                        if (res.isConfirmed) {\n                            console.log(\"Confirmed...\")\n                            var payload = {creator: this.selectedAccount, id: this.product.id}\n                            // confirmed delete\n                            let result = await this.$store.dispatch('sap200.redduct.redduct/sendMsgDeleteProduct', {value: payload, fee:[]})\n                            await this.$swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Transaction Log',\n\t\t\t\t\t\t\t\ttext: result.rawLog,\n\t\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\t\tposition: 'bottom-end'\n                            })\n                            await this.$emit('product-deleted')\n\n                        } else {\n                            console.log(\"Cancelled...\")\n                            // do nothing\n                        }\n                    })\n            } else {\n                this.$swal.fire({\n                    icon: 'error',\n\t\t\t\t\ttitle: 'Wallet Not Connected',\n\t\t\t\t\ttext: 'Please sign in and connect to your wallet.',\n\t\t\t\t\tposition: 'bottom-end'\n                })\n            }\n        },\n\n        async editQuantity() {\n             this.$swal.fire({\n                        text: 'Are you sure you want to change quantity to ' + this.equantity,\n\t\t\t\t\t\ttitle: \"Edit Quantity ?\",\n\t\t\t\t\t\ticon: 'question',\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tconfirmButtonColor: 'blueviolet',\n\t\t\t\t\t\tcancelButtonColor: 'orange',\n\t\t\t\t\t\tconfirmButtonText: 'Yes, Edit',\n\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t}).then(async (res) => {\n                        if (res.isConfirmed) {  \n                            console.log(\"Confirmed...\")\n                            let edit_payload = {\n                                creator: this.selectedAccount,\n                                id: this.product.id,\n                                ipfshash: this.product.ipfshash,\n                                quantity: this.equantity\n                            }\n\n                            console.log(edit_payload)\n                            let res = await this.$store.dispatch(\"sap200.redduct.redduct/sendMsgUpdateProduct\", {value: edit_payload, fee: []})\n                            await this.$swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Transaction Log',\n\t\t\t\t\t\t\t\ttext: res.rawLog,\n\t\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\t\tposition: 'bottom-end'\n                            })\n                            await this.$emit('product-updated')\n                        } else {\n                            console.log(\"Cancelled\")\n                        }\n                    });\n\n        }\n    }\n\n}\n</script>\n\n<style scoped>\n\n    .displayCard {\n        width: 40%;\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n        transition: 0.3s;\n        background-color: white;\n        align-items: center;\n        justify-content: center;\n        margin: 1rem auto;\n        margin-bottom: 4rem;\n        padding: 1rem;\n    }\n\n    .section {\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n        transition: 0.3s;\n        border-color: black;\n        border-style: solid;\n        border-width: 0px 0px 0px 0px;\n        margin-right: 2rem;\n        \n        padding: 1rem;\n        width: 100%;\n    }\n    \n    .value {\n        font-size: 1.3rem;\n        word-wrap:break-word;\n    }\n\n    .header {\n        font-size: 1.5rem;\n        margin-bottom: 1.6rem;\n    }\n\n    img {\n        width: 200px;\n        height: 100px;\n    }\n\n    .section:hover {\n        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n        cursor: pointer;\n    }\n\n    span {\n        border-style: solid;\n        border-color: black;\n        border-width: 0px 0px 1px 0px;\n    }\n\n    input {\n        width: 70%;\n        height: 30px;\n        border-width: 0px 0px 1px 0px;\n        margin-bottom: 1.3rem;\n    }\n\n    button {\n        margin-right: 1.2rem;\n        background-image: linear-gradient(to right, blueviolet, violet);\n        color: white;\n        padding: 1rem;\n        width: 10rem;\n        border-width: 0px;\n        border-radius: 2rem;\n        font-size: 1.4rem;\n        cursor: pointer;\n    }\n\n    button:hover {\n        background-image: linear-gradient(to right, violet, blueviolet);\n        font-size: 1.45rem;\n    }\n\n\n\n</style>\n\n","import { render } from \"./ProductCard.vue?vue&type=template&id=2a637136&scoped=true\"\nimport script from \"./ProductCard.vue?vue&type=script&lang=js\"\nexport * from \"./ProductCard.vue?vue&type=script&lang=js\"\n\nimport \"./ProductCard.vue?vue&type=style&index=0&id=2a637136&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-2a637136\"\n\nexport default script","import { render } from \"./ManageProduct.vue?vue&type=template&id=e3e12572\"\nimport script from \"./ManageProduct.vue?vue&type=script&lang=js\"\nexport * from \"./ManageProduct.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <div>\n\n\t\t<UtilityBar />\n\n        <p v-if=\"isLoading\" style=\"text-align: center; font-size: 3rem; margin-top: 5rem\">Loading...</p>\n\n         <!-- Product 2-->\n         <ul>\n             <li v-for=\"obj in productSKU\" :key=\"obj.productHash.IpfsHash\">\n                    <BuyCard \n                    :imageSource=\"obj.data.imageLinks[0].link\"\n                    :productName=\"obj.data.productName\"\n                    :productPrice=\"obj.data.price\"\n                    :sellerAddress=\"obj.productHash.creator\"\n                    :productObject=\"obj\"\n                    :quantity=\"obj.productHash.quantity\"\n                    />\n            </li>\n        </ul>\n           \n    </div>\n</template>\n\n<script>\nimport BuyCard from '../utils/BuyCard.vue'\nimport UtilityBar from './UtilityBar.vue'\n\nexport default {\n    /* eslint-disable */\n    components: {\n        BuyCard,\n\t\tUtilityBar\n    },\n\n    data() {\n\t\treturn {\n\t\t\tproductHash: [],\n\t\t\tproductSKU: [],\n\t\t\tmodulePath: 'sap200.redduct.redduct',\n\t\t\tmoduleType: 'Product',\n\t\t\tipfsPrefix: 'https://ipfs.io/ipfs/',\n\t\t\tisLoading: false\n\t\t}\n    },\n    \n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n    },\n    \n    methods: {\n\t\tasync getProductHash() {\n\t\t\tthis.isLoading = true\n\t\t\ttry {\n\t\t\t\tlet res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', { options: {} })\n\t\t\t\tlet new_res = await res.Product.filter(v => v.creator != this.selectedAccount)\n\t\t\t\tthis.productHash = await new_res\n\n\t\t\t\t// Get the Ipfs hash\n\n\t\t\t\tfor (var i = 0; i < this.productHash.length; i++) {\n\t\t\t\t\tawait this.getProductSKU(this.productHash[i])\n\t\t\t\t}\n\n\t\t\t\tthis.isLoading = await false\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e)\n\t\t\t\tthis.productHash = []\n\t\t\t}\n\t\t},\n\n\t\tasync getProductSKU(productHash) {\n\t\t\tif (productHash.ipfshash) {\n\t\t\t\tvar response = await fetch(this.ipfsPrefix + productHash.ipfshash)\n\t\t\t\tvar data\n\n\t\t\t\ttry {\n\t\t\t\t\tdata = await response.json()\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tif (data) {\n\t\t\t\t\tthis.productSKU.push({ productHash: productHash, data: data })\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\trefreshCards() {\n\t\t\tthis.productHash = []\n\t\t\tthis.productSKU = []\n\t\t\tthis.getProductHash()\n\t\t}\n\t},\n\n\tcreated() {\n\t\tthis.getProductHash()\n\t}\n   \n}\n\n</script>\n\n<style scoped>\n\nul{\n  list-style:none;\n}\n\nul li{\n  float:left;\n  padding:10px;\n}\n\n\n\n</style>","<template>\n    <section class=\"buyCard\" >\n            <img :src=\"imageSource\" />\n            <section id=\"details\">\n                <p class=\"link\" style=\"font-size: 2rem; cursor: pointer;\" @click=\"renderDetails\"> <strong> {{productName}} </strong> </p>\n                <p style=\"color: red;\"> <b> {{productPrice}} ipcp </b> </p>\n                \n            </section>\n            <section id=\"footer\">\n                <p style=\"text-align: left; color: green; font-size: 1.6rem;\"> <b>Sold By:</b> </p>\n                <p style=\"color: blueviolet; padding=1rem;\">{{sellerAddress}}</p>\n            </section>\n            <section id=\"want-q\">\n            <input type=\"number\" :max=\"maxQuantity\" v-model=\"wantQuantity\" min=\"1\" />\n            </section>\n            <section>\n            <button @click=\"addToCart\"> + Add to Cart </button>\n            </section>\n     </section>  \n</template>\n\n<script>\nexport default {\n    /* eslint-disable */\n    props: {\n        imageSource: String,\n        productName: String,\n        productPrice: Number,\n        sellerAddress: String,\n        quantity: Number,\n        productObject: Object\n    },\n\n    data() {\n        return {\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Cartitem',\n            maxQuantity: this.quantity,\n            wantQuantity: 1\n            \n        };\n    },\n\n     computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n    },\n\n    methods: {\n        renderDetails() {\n            console.log(\"Rendering Details...\")\n\n            var links = [];\n            for (var i = 0; i < this.productObject.data.imageLinks.length; i++) {\n                links.push(this.productObject.data.imageLinks[i].link)\n            }\n\n\n            this.$router.push({name: 'ProductDetails', params: {\n                currentImage: this.productObject.data.imageLinks[0].link,\n                imageLinks: links,\n                productName: this.productName,\n                productPrice: this.productPrice,\n                category: this.productObject.data.category,\n                description: this.productObject.data.description,\n                ipfsHash: this.productObject.productHash.ipfshash,\n                sellerAddress: this.sellerAddress\n            }})\n        },\n\n        async addToCart() {\n\n            if (!this.selectedAccount) {\n                this.$swal.fire({\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\ttitle: 'Wallet Not Connected',\n\t\t\t\t\ttext: 'Please sign in and connect to your wallet.',\n\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t})\n            } else {\n                console.log(this.productPrice)\n                let ipfsHash = this.productObject.productHash.ipfshash;\n                let quantity = this.wantQuantity;\n                let payload = {\n                    creator: this.selectedAccount,\n                    producthash: ipfsHash,\n                    quantity: quantity,\n                    seller: this.sellerAddress,\n                    price: parseInt(this.productPrice, 10),\n                }\n                let result = await this.$store.dispatch(this.modulePath + '/sendMsgCreate' + this.moduleType, { value: payload, fee: [] })\n                await this.$swal.fire({\n\t\t\t\t\ticon: 'info',\n\t\t\t\t\ttitle: 'Added to cart',\n\t\t\t\t\ttext: 'Please check the cart',\n\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t})\n            }\n        },\n    }\n\n}\n</script>\n\n<style scoped>\n    .buyCard {\n        width: 400px;\n        padding: 1rem;\n        background-color: white;\n        box-shadow: 1px 3px 3px 1px gray;\n        margin-left: 2rem;\n        border-radius: 1rem;\n    }\n\n    img {\n        width: 100%;\n        height: 300px;\n        justify-content: center;\n        align-items: center;\n        display: flex;\n        box-shadow: 0 1px 1px 0 gray;\n    }\n\n    #details {\n        font-size: 1.7rem;\n        text-align: left;\n        color: gray;\n    }\n\n    #footer {\n        font-size: 1.5rem;\n        text-align:center;\n    }\n\n    button{\n        margin-top: 1rem;\n        background-image: linear-gradient(to right, violet, blueviolet);\n        cursor: pointer;\n        color: white;\n        padding: 1rem;\n        border-radius: 2rem;\n        border-width: 0;\n        font-size: 1.5rem;\n    }\n\n    button:hover {\n        background-image: linear-gradient(to left, violet, blueviolet);\n        box-shadow: 0 5px 5px 0 gray;\n    }\n\n    .link:hover {\n        color: black;\n    }\n\n    .want-q {\n        margin-bottom: 2rem;\n    }\n\n</style>","import { render } from \"./BuyCard.vue?vue&type=template&id=835efc6a&scoped=true\"\nimport script from \"./BuyCard.vue?vue&type=script&lang=js\"\nexport * from \"./BuyCard.vue?vue&type=script&lang=js\"\n\nimport \"./BuyCard.vue?vue&type=style&index=0&id=835efc6a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-835efc6a\"\n\nexport default script","<template>\n    <div id=\"main\">\n        <input type=\"text\" name=\"searchbar\"/>\n        <button> &#128269; </button>\n        <section id=\"cart\" @click=\"navigateToCart\"> <span style=\"color: red; font-size: 1.5rem;\"> {{numberOfItemsInCart}} </span> &#128722;</section>\n    </div>\n</template>\n\n<script>\n\nexport default {\n\n    data() {\n        return {\n            numberOfItemsInCart: 0,\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Cartitem',\n            cartList: []\n        };\n    },\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async updateItemCount() {\n            let res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', { options: {} })\n            let new_res = await res.Cartitem.filter((v) => v.creator == this.selectedAccount)\n            this.numberOfItemsInCart = await new_res.length;\n            this.cartList = await new_res \n        },\n\n        navigateToCart() {\n            this.$router.push({\n                path: '/cart/cartDetails'\n            })\n        }\n    },\n\n    created() {\n        this.updateItemCount()\n    },\n\n    updated() {\n        this.updateItemCount()\n    }\n\n}\n\n</script>\n\n<style scoped>\n    #main {\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n        padding: 1rem;\n        font-size: 1rem;\n        display: flex;\n        justify-content: right;\n        align-items: right;\n        background-color: white;\n\n        box-shadow: 0 2px 2px 0 gray;\n        margin: 1rem auto;\n        border-radius: 1px;\n        padding: 1rem;\n        width: 99%;\n        max-width: 100%;\n    }\n\n    #cart {\n        margin-left: 10rem;\n        margin-right: 5rem;\n        font-size: 2rem;\n        cursor: pointer;\n        padding: 0.6rem;\n    }\n\n    #cart:hover {\n        font-size: 2.01rem;\n        background-color: rgb(220, 220, 220);\n    }\n\n    input {\n        width: 30%;\n        margin-right: 1rem;\n    }\n\n    button {\n        cursor: pointer;\n        border-width: 0;\n        font-size: 1.5rem;\n    }\n\n    button:hover {\n        border-width: 1px;\n        border-color: rgb(28, 28, 233);\n        border-style: double;\n    }\n\n</style>","import { render } from \"./UtilityBar.vue?vue&type=template&id=1fd7212e&scoped=true\"\nimport script from \"./UtilityBar.vue?vue&type=script&lang=js\"\nexport * from \"./UtilityBar.vue?vue&type=script&lang=js\"\n\nimport \"./UtilityBar.vue?vue&type=style&index=0&id=1fd7212e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-1fd7212e\"\n\nexport default script","import { render } from \"./BuyProduct.vue?vue&type=template&id=4fd0f194&scoped=true\"\nimport script from \"./BuyProduct.vue?vue&type=script&lang=js\"\nexport * from \"./BuyProduct.vue?vue&type=script&lang=js\"\n\nimport \"./BuyProduct.vue?vue&type=style&index=0&id=4fd0f194&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-4fd0f194\"\n\nexport default script","<template>\n    <div id=\"main\">\n        <section class=\"imagecard\">\n            <ul> \n                <li v-for=\"(imagesrc, index) in imageLinks\" :key=\"index\" @click=setImage(index)>\n                    <img class=\"liImage\" :src=\"imagesrc\" />\n                </li>\n            </ul>\n            <img :src=\"currImag\" />\n            <section id=\"details\">\n                <p style=\"color: black; font-size:2.5rem;\"> {{productName}} </p>\n                <p style=\"color: red; font-size: 2rem;\"> {{productPrice}} </p>\n                <p style=\"color: green; font-size: 2rem;\"> SKU: {{ipfsHash}} </p>\n                <p style=\"color: green; font-size: 2rem;\"> Seller: {{sellerAddress}} </p>\n                <p style=\"color: gray; font-size: 1.5rem;\"> Category: {{category}} </p><br>\n                <button @click=\"addToCart\"> + Add to Cart </button>\n            </section>\n        </section> \n\n        <section class=\"description\">\n            <h3> Description </h3><br>\n            {{description}}\n        </section>\n    </div>    \n</template>\n\n<script>\nexport default {\n\n    name: 'ProductDetails',\n\n    props: {\n        imageLinks: Array,\n        currentImage: String,\n        productName: String,\n        productPrice: String,\n        category: String,\n        description: String,\n        ipfsHash:String,\n        sellerAddress: String\n    },\n\n    data() {\n        return {\n            currImag: this.currentImage,\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Cartitem'\n        }\n    },\n\n    computed: {\n        selectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n    },\n\n    methods: {\n        setImage(index) {\n            this.currImag = this.imageLinks[index]\n        },\n\n        async addToCart() {\n\n             if (!this.selectedAccount) {\n                this.$swal.fire({\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\ttitle: 'Wallet Not Connected',\n\t\t\t\t\ttext: 'Please sign in and connect to your wallet.',\n\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t})\n            } else {\n\n                let buyerAddress = this.selectedAccount;\n                let quantity = 1;\n                let payload = {\n                    creator: this.selectedAccount,\n                    producthash: this.ipfsHash,\n                    quantity: quantity,\n                    seller: this.sellerAddress,\n                    price: this.productPrice,\n                }\n                let result = await this.$store.dispatch(this.modulePath + '/sendMsgCreate' + this.moduleType, { value: payload, fee: [] })\n                await this.$swal.fire({\n\t\t\t\t\ticon: 'info',\n\t\t\t\t\ttitle: 'Added to cart',\n\t\t\t\t\ttext: 'Please check cart...',\n\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t})\n            }\n        }\n    }\n\n}\n</script>\n\n<style scoped>\n\n    #main {\n        font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    }\n\n\n    .imagecard {\n        overflow: scroll;\n        color: blueviolet;\n        padding: 1rem;\n        font-size: 1rem;\n        display: flex;\n        justify-content: left;\n        align-items: left;\n        background-color: white;\n\n        box-shadow: 0 2px 8px 0 gray;\n        margin: 1rem auto;\n        border-radius: 1px;\n        padding: 4rem;\n        width: 75%;\n        max-width: 100%;\n        margin-top: 3rem;\n        border-radius: 1rem;\n    }\n\n    img {\n        padding: 1rem;\n        margin-right: 5rem;\n        width: 40%;\n        height: 60%;\n    }\n\n    .liImage {\n        width: 100px;\n        height: 100px;\n        border-width: 1px;\n        padding: 1rem;\n        border-style: solid;\n        border-color: black;\n        cursor: pointer;\n    }\n    .liImage:hover {\n        height: 101px;\n        width: 101px;\n        box-shadow: 0 10px 10px 0 gray;\n    }\n\n    ul {\n        margin-right: 2rem;\n    }\n\n    .description {\n        box-shadow: 0 2px 8px gray;\n        margin: 1rem auto;\n        border-radius: 1px;\n        padding: 4rem;\n        width: 75%;\n        max-width: 100%;\n        margin-top: 3rem;\n        background-color: white;\n        font-size: 2rem;\n        border-radius: 1rem;\n    }\n\n    #details {\n        width: 20%;\n\n    }\n\n    p {\n        font-size: 3rem;\n    }\n\n    button {\n        background-image: linear-gradient(to right, violet, blueviolet);\n        cursor: pointer;\n        color: white;\n        padding: 2rem;\n        border-radius: 2rem;\n        border-width: 0;\n        font-size: 1.7rem;\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    }\n\n\n    button:hover {\n        background-image: linear-gradient(to left, violet, blueviolet);\n        box-shadow: 0 5px 5px 0 gray;\n    }\n\n</style>","import { render } from \"./ProductDetails.vue?vue&type=template&id=6c2b8324&scoped=true\"\nimport script from \"./ProductDetails.vue?vue&type=script&lang=js\"\nexport * from \"./ProductDetails.vue?vue&type=script&lang=js\"\n\nimport \"./ProductDetails.vue?vue&type=style&index=0&id=6c2b8324&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-6c2b8324\"\n\nexport default script","<template>\n    \n    <div id=\"main\">\n        <CartItem \n         v-for=\"item in cartList\" :key=\"item.ProductHash\"\n         :idInCart=\"item.id\"\n         :quantity=\"item.quantity\"\n         :productHash=\"item.producthash\"\n         :pricetag=\"item.price\"\n         :seller=\"item.seller\"\n         @update-cart=\"getItems\"\n         @update-price=\"getTotalPrice\"\n        />\n\n        <div id=\"price\">\n             <span> Total: {{priceTotal}} </span>\n             <button @click=\"navigateToOrders\"> Proceed to checkout </button>\n        </div>\n        \n    </div> \n\n\n\n</template>\n\n<script>\n\nimport CartItem from '../utils/CartItem.vue'\n\nexport default {\n\n    components: {\n        CartItem\n    },\n\n    data() {\n        return {\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Cartitem',\n            ipfsPrefix: 'https://ipfs.io/ipfs/',\n            priceTotal: 0,\n            cartList: []\n        };\n    },\n\n     computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async getItems() {\n            let res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', { options: {} })\n            let new_res = await res.Cartitem.filter((v) => v.creator == this.selectedAccount)\n            this.cartList = await new_res \n            console.log(this.cartList)\n        },\n\n        async getTotalPrice() {\n            console.log('here')\n            let res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', { options: {} })\n            let new_res = await res.Cartitem.filter((v) => v.creator == this.selectedAccount)\n\n            console.log(new_res)\n\n            var totalPrice = 0\n            var data\n\n            for (var i = 0; i < await new_res.length; i++) {\n                \n                // get the object using fetch\n                data = await new_res[i].price * await new_res[i].quantity\n\n                totalPrice += await parseInt(data); \n            }\n\n            this.priceTotal = await totalPrice\n        },\n\n        navigateToOrders() {\n            this.getTotalPrice()\n            this.getItems()\n\n            if (this.cartList.length > 0) {\n\n                this.$router.push({name: 'OrderPage', params: {\n                    totalPrice: this.priceTotal,\n                    allItemString: JSON.stringify(this.cartList)\n                }})\n            } else {\n                 this.$swal.fire({\n                    icon: 'error',\n\t\t\t\t\ttitle: 'No items in cart',\n\t\t\t\t\ttext: 'Please Add items to checkout',\n\t\t\t\t\tposition: 'bottom-end'\n                });\n            }\n\n        }\n    },\n\n    refreshPage() {\n        this.getItems()\n        this.getTotalPrice()\n    },\n\n    created() {\n        this.getItems()\n        this.getTotalPrice()\n    },\n}\n</script>\n\n<style scoped>\n\n    #price {\n        text-align: right;\n        font-size: 2rem;\n        width: 95%;\n        \n        border-width: 1px  black;\n        border-style: solid;\n        margin: 1rem auto;\n        border-bottom-width: 0px;\n        border-left-width: 0;\n        border-right: 0;\n        border-color: gray;\n        margin-top: 5rem;\n        padding: 2rem;\n    }\n\n   button {\n        background-image: linear-gradient(to right, violet, blueviolet);\n        cursor: pointer;\n        color: white;\n        padding: 2rem;\n        border-radius: 2rem;\n        border-width: 0;\n        font-size: 1.7rem;\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    }\n\n\n    button:hover {\n        background-image: linear-gradient(to left, violet, blueviolet);\n        box-shadow: 0 5px 5px 0 gray;\n    }\n\n    span {\n        margin-right: 3rem;\n        border-width: 1px;\n        border-style: solid;\n        padding: 1rem;\n    }\n\n</style>","<template>\n    <div id=\"main\">\n            <p v-if=\"isLoading\"> Loading ... </p>\n            <img :src=\"currImage\" />\n            <section id=\"details\">\n                <span style=\"color: black; font-size:2rem;\"> ID: {{idInCart}} </span>\n                <span style=\"color: green; font-size:2rem;\"> prodID: {{productId}} </span>\n                <span style=\"color: blue; font-size:2rem;\"> Name: {{productName}} </span>\n                <span style=\"color: blue; font-size:2rem;\"> Seller: {{seller}} </span>\n                <span style=\"color: black; font-size:2rem;\"> Qt: {{quantity}} </span>\n                <span style=\"color: red; font-size: 2rem;\">  Price: {{price}} </span>\n                <span style=\"color: gray; font-size: 2rem;\"> Category: {{category}} </span>\n                <span class=\"button\" @click=\"removeItem\"> - Delete </span>\n            </section>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    props: {\n        idInCart: Number,\n        quantity: Number,\n        productHash: String,\n        pricetag: Number,\n        seller: String\n    },\n\n    emits: ['update-cart', 'update-price'],\n\n    data() {\n        return {\n            currImage: '',\n            productId: '',\n            price: 0,\n            productName: '',\n            category: '',\n            ipfsPrefix: 'https://ipfs.io/ipfs/',\n\t\t\tisLoading: false\n        };\n    },\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async updateInitialVariables() {\n            this.isLoading = true;\n            // fetch the product SKU\n            var response = await fetch(this.ipfsPrefix + this.productHash)\n\t\t\tvar data\n            try {\n                data = await response.json()\n            } catch (e) {\n                // do nothing\n            }\n\n            // extract the details\n            this.productId = await data.productId\n            this.productName = await data.productName\n            this.price = await data.price + ' ' + await data.currency\n            this.category = await data.category\n            this.currImage= await data.imageLinks[0].link\n\n            this.isLoading = await false\n        },\n\n        async removeItem() {\n\n            this.$swal.fire({\n                        title: 'Remove from cart ?',\n\t\t\t\t\t\ttext: this.productId,\n\t\t\t\t\t\ticon: 'question',\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tconfirmButtonColor: 'blueviolet',\n\t\t\t\t\t\tcancelButtonColor: 'orange',\n\t\t\t\t\t\tconfirmButtonText: 'Yes, Remove',\n\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t}).then(async (res) => {\n                        if (res.isConfirmed) {\n                            // remove\n                            console.log(\"confirmed...\")\n                            var payload = {creator: this.selectedAccount, id: this.idInCart}\n                            // confirmed delete\n                            let result = await this.$store.dispatch('sap200.redduct.redduct/sendMsgDeleteCartitem', {value: payload, fee:[]})\n                            await this.$swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Transaction Log',\n\t\t\t\t\t\t\t\ttext: JSON.stringify(result),\n\t\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\t\tposition: 'bottom-end'\n                            })\n\n                            await this.$emit('update-cart')\n                            await this.$emit('update-price')\n\n                        } else {\n                            // do nothing cancelled\n                            console.log(\"cancelled\");\n                        }\n                    });\n\n        }\n    },\n\n    created() {\n        this.updateInitialVariables()\n    }\n\n}\n</script>\n\n<style scoped> \n\n    #main {\n        color: blueviolet;\n        padding: 1rem;\n        font-size: 1rem;\n        display: flex;\n        justify-content: left;\n        align-items: left;\n        background-color: white;\n\n        box-shadow: 0 2px 8px 0 gray;\n        margin: 1rem auto;\n        border-radius: 1px;\n        padding: 1rem;\n        width: 95%;\n        max-width: 100%;\n        overflow: scroll;\n    }\n\n    #details {\n        padding: 1rem;\n        font-size: 1rem;\n        display: flex;\n        justify-content: left;\n        align-items: left;\n        background-color: white;\n    }\n\n    button {\n        height: 20px;\n        margin-left: 5rem;\n    }\n\n    span {\n        margin-right: 2rem;\n    }\n\n    img {\n        width: 150px;\n        height: 150px;\n    }\n\n    .button {\n        background-color: green;\n        height: 4rem;\n        width: 15rem;\n        text-align: center;\n        padding: 1rem;\n        font-size: 1.5rem;\n        background-color: gainsboro;\n        color: white;\n        border-radius: 0.5rem;\n        background-image: linear-gradient(to right, violet, blueviolet);\n        cursor: pointer;\n    }\n\n    .button:hover {\n        border-width: 1px;\n        border-style: solid;\n        border-color: gray;\n        background-image: linear-gradient(to left, violet, blueviolet);\n    }\n\n</style>","import { render } from \"./CartItem.vue?vue&type=template&id=dfafdd9e&scoped=true\"\nimport script from \"./CartItem.vue?vue&type=script&lang=js\"\nexport * from \"./CartItem.vue?vue&type=script&lang=js\"\n\nimport \"./CartItem.vue?vue&type=style&index=0&id=dfafdd9e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-dfafdd9e\"\n\nexport default script","import { render } from \"./CartDetails.vue?vue&type=template&id=302a5b8f&scoped=true\"\nimport script from \"./CartDetails.vue?vue&type=script&lang=js\"\nexport * from \"./CartDetails.vue?vue&type=script&lang=js\"\n\nimport \"./CartDetails.vue?vue&type=style&index=0&id=302a5b8f&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-302a5b8f\"\n\nexport default script","<template>\n    <div id=\"main\">\n        <section id=\"address\">\n            <h1> Address </h1>\n            <textarea v-model=\"address\"/>\n        </section>\n\n        <section id=\"payment-amount\">\n           <span> payment amount: {{totalPrice}} ipcp</span>\n        </section>\n\n        <button @click=\"takeOrders\"> Proceed to pay </button>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'OrderPage',\n    \n    props: {\n        totalPrice: Number,\n        allItemString: String\n    },\n\n    data() {\n        return {\n            address: '',\n            moduleType: 'Order',\n            modulePath: 'sap200.redduct.redduct'\n        };\n    },\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async takeOrders() {\n\n            if (this.selectedAccount) {\n                let allItemJSON = JSON.parse(this.allItemString)\n\n                if (this.address == '') {\n                    this.$swal.fire({\n                        icon: 'error',\n                        title: 'Address cannot be empty',\n                        text: 'Please provide a delivery address',\n                        position: 'bottom-end'\n                    });\n                    return;\n                }\n\n\n                for (var i = 0; i < allItemJSON.length; i++) {\n\n                   \n                        // set the order\n                        console.log(allItemJSON[i])\n                        let payload = await {\n                            creator: this.selectedAccount,\n                            producthash: allItemJSON[i].producthash,\n                            seller: allItemJSON[i].seller, // it is actually\n                            quantity: allItemJSON[i].quantity,\n                            deliveryaddress: this.address,\n                            status: 0,\n                            paid: 1,\n                            totalamount: allItemJSON[i].price\n                        }\n\n                        console.log(payload)\n\n                        // issue bc req\n                        let res = await this.$store.dispatch(this.modulePath + '/sendMsgCreateOrder', { value: payload, fee: [] })\n                        await console.log(res)\n\n                       // delete the items from cart.\n                       let del_load = await {\n                           creator: this.selectedAccount,\n                           id: allItemJSON[i].id,\n                       }\n                       let del_res = await this.$store.dispatch(this.modulePath + '/sendMsgDeleteCartitem', {value: del_load, fee: []})\n                       await console.log(del_res)\n\n                }\n\n              await this.$swal.fire({\n                    icon: 'info',\n\t\t\t\t\ttitle: 'All orders created',\n\t\t\t\t\ttext: 'Check in your orders if it is created. This is a beta version so expect some errors.',\n\t\t\t\t\tposition: 'bottom-end'\n                })\n\n            } else {\n                this.$swal.fire({\n                    icon: 'error',\n\t\t\t\t\ttitle: 'Wallet Not Connected',\n\t\t\t\t\ttext: 'Please sign in and connect to your wallet.',\n\t\t\t\t\tposition: 'bottom-end'\n                });\n\n            }\n        },\n    }\n\n}\n</script>\n\n<style scoped>\n\n    #address {\n        background-color: white;\n        box-shadow: 0 2px 8px 0 gray;\n        width: 80%;\n        margin: 1rem auto;\n        padding: 2rem;\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    }\n\n    textarea {\n        width: 90%;\n        margin: 1rem auto;\n        height: 30rem;\n        display: flex;\n        justify-content: right;\n        font-size: 1.6rem;\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    }\n\n    button {\n        background-image: linear-gradient(to right, violet, blueviolet);\n        cursor: pointer;\n        color: white;\n        padding: 2rem;\n        border-radius: 2rem;\n        border-width: 0;\n        font-size: 1.7rem;\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n        margin: 1rem auto;\n        justify-content: right;\n        display: flex;\n    }\n\n\n    button:hover {\n        background-image: linear-gradient(to left, violet, blueviolet);\n        box-shadow: 0 5px 5px 0 gray;\n    }\n\n    #payment-amount {\n        text-align: right;\n        font-size: 2rem;\n        width: 85%;\n        \n        border-style: solid;\n        margin: 1rem auto;\n        border-bottom-width: 0px;\n        border-left-width: 0;\n        border-top-width: 0px;\n        border-right: 0;\n        border-color: gray;\n        margin-top: 5rem;\n        padding: 2rem;\n    }\n\n    span {\n        margin-right: 3rem;\n        border-width: 1px;\n        border-style: solid;\n        padding: 1rem;\n    }\n\n</style>","import { render } from \"./OrderPage.vue?vue&type=template&id=6f7fcb5e&scoped=true\"\nimport script from \"./OrderPage.vue?vue&type=script&lang=js\"\nexport * from \"./OrderPage.vue?vue&type=script&lang=js\"\n\nimport \"./OrderPage.vue?vue&type=style&index=0&id=6f7fcb5e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-6f7fcb5e\"\n\nexport default script","<template>\n\n    <div id=\"main\">\n        <SellNavigation />\n\n        <section id=\"cards\">\n            <OrderCard v-for=\"order in orderList\" :key=\"order.id\"\n                :imgsrc=\"order.image\"\n                :productHash=\"order.obj.producthash\"\n                :buyerAddress=\"order.obj.creator\"\n                :quantity=\"order.obj.quantity\"\n                :paid=\"order.obj.paid\"\n                :deliveryAddress=\"order.obj.deliveryaddress\"\n                :initStatus=\"order.obj.status\"\n                :orderId=\"order.obj.id\"\n            />\n        </section>\n\n    </div>\n    \n    \n</template>\n\n<script>\nimport OrderCard from '../utils/OrderCard.vue';\n\nexport default {\n\n    components: {\n\n        OrderCard\n    },\n\n    data() {\n        return {\n            orderList: [],\n            orderWithDelivery: [],\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Order',\n            ipfsPrefix: 'https://ipfs.io/ipfs/'\n        };\n    },\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async retrieveOrders() {\n            \n            // retrieve order\n            let res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', {options: {}});\n            let new_res = await res.Order.filter((v) => v.creator == this.selectedAccount);\n\n            // retrieve delivery address\n            for (var i = 0; i < await new_res.length; i++) {\n                // get the imageLink\n                let image = await this.getProductImage(new_res[i].producthash)\n\n\n                await this.orderList.push({obj: new_res[i], image: image});\n                await console.log(this.orderList);\n            }\n\n\n\n            await console.log(this.orderList);\n        },\n\n        async getProductImage(productHash) {\n                var response = await fetch(this.ipfsPrefix + productHash)\n\t\t\t\tvar data\n\n\t\t\t\ttry {\n                    data = await response.json()\n                    console.log(data)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tif (data) {\n\t\t\t\t\treturn data.imageLinks[0].link\n\t\t\t\t} else {\n                    return ''\n                }\n\t\t}\n    },\n\n    created() {\n        this.retrieveOrders()\n    }\n\n}\n\n</script>\n\n<style scoped>\n    #cards {\n        margin-top: 5rem;\n    }\n</style>\n","<template>\n\n    <div id=\"main\">\n        <SellNavigation />\n        \n        <section id=\"order-bar\">\n            <span class=\"tick\" v-if=\"initStatus==2\"> &#9989; </span>\n            <span> <img :src=\"imgsrc\" /> </span>\n            <span class=\"details\"> Order ID: <p>{{orderId}}</p> </span>\n            <span class=\"details\"> productHash: <p>{{productHash}}</p> </span>\n            <span class=\"details\"> BuyerAddress: <p>{{buyerAddress}}</p> </span>\n            <span class=\"details\"> Quantity: <p>{{quantity}}</p> </span>\n            <span class=\"details\"> Paid: <p>{{paid}}</p> </span>\n            <span class=\"details\"> Status: <p> {{statusDescription[status]}} </p> </span>\n            <span class=\"details\"> Delivery-Address: <p>{{deliveryAddress}}</p> </span>\n        </section>\n\n    </div>\n    \n    \n</template>\n\n\n<script>\nexport default {\n    props: {\n        imgsrc: String,\n        productHash: String,\n        buyerAddress: String,\n        quantity: String,\n        paid: Number,\n        deliveryAddress: String,\n        initStatus: Number,\n        orderId: Number\n    },\n\n    data() {\n        return {\n            statusDescription: ['to be dispatched', 'dispatched, on the way', 'delivered'],\n            statusCode: [0, 1, 2],\n            isDisabled: true,\n            status: this.initStatus\n        }\n    },\n}\n</script>\n\n\n\n<style scoped>\n\n    #order-bar {\n        color: blueviolet;\n        padding: 1rem;\n        font-size: 1rem;\n        display: flex;\n        justify-content: left;\n        align-items: left;\n        background-color: white;\n\n        box-shadow: 0 2px 8px 0 gray;\n        margin: 1rem auto;\n        border-radius: 1px;\n        padding: 1rem;\n        width: 95%;\n        max-width: 100%;\n        overflow: scroll;\n    }\n\n    img {\n        width: 150px;\n        height: 150px;\n    }\n\n    .details {\n        margin-right: 1rem;\n        font-size: 1rem;\n        padding: 2rem;\n    }\n\n    .tick {\n        font-size: 2rem;\n    }\n\n</style>","import { render } from \"./OrderCard.vue?vue&type=template&id=47ea6972&scoped=true\"\nimport script from \"./OrderCard.vue?vue&type=script&lang=js\"\nexport * from \"./OrderCard.vue?vue&type=script&lang=js\"\n\nimport \"./OrderCard.vue?vue&type=style&index=0&id=47ea6972&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-47ea6972\"\n\nexport default script","import { render } from \"./MyOrders.vue?vue&type=template&id=8323d26e&scoped=true\"\nimport script from \"./MyOrders.vue?vue&type=script&lang=js\"\nexport * from \"./MyOrders.vue?vue&type=script&lang=js\"\n\nimport \"./MyOrders.vue?vue&type=style&index=0&id=8323d26e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-8323d26e\"\n\nexport default script","<template>\n\n    <div id=\"main\">\n        <SellNavigation />\n\n        <section id=\"cards\">\n            <ManageCard v-for=\"order in orderList\" :key=\"order.obj.id\"\n                :imgsrc=\"order.image\"\n                :productHash=\"order.obj.producthash\"\n                :buyerAddress=\"order.obj.creator\"\n                :quantity=\"order.obj.quantity\"\n                :paid=\"order.obj.paid\"\n                :deliveryAddress=\"order.obj.deliveryaddress\"\n                :initStatus=\"order.obj.status\"\n                :orderId=\"order.obj.id\"\n                @order-updated=\"retrieveOrders\"\n            />\n        </section>\n\n    </div>\n    \n    \n</template>\n\n<script>\nimport ManageCard from '../utils/ManageCard.vue';\nimport SellNavigation from './SellNavigation.vue'\n\nexport default {\n\n    components: {\n\n        ManageCard,\n        SellNavigation\n    },\n\n    data() {\n        return {\n            orderList: [],\n            orderWithDelivery: [],\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Order',\n            ipfsPrefix: 'https://ipfs.io/ipfs/',\n        };\n    },\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async retrieveOrders() {\n\n            if (! this.selectedAccount) {\n                return;\n            }\n            \n            // retrieve order\n            let res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', {options: {}});\n            let new_res = await res.Order.filter((v) => v.seller == this.selectedAccount);\n            new_res = await new_res.filter((v) => v.status != 2);\n\n            // retrieve delivery address\n            for (var i = 0; i < await new_res.length; i++) {\n                // get the imageLink\n                let image = await this.getProductImage(new_res[i].producthash)\n\n\n                await this.orderList.push({obj: new_res[i], image: image});\n                await console.log(this.orderList);\n            }\n\n\n\n            await console.log(this.orderList);\n        },\n\n        async getProductImage(productHash) {\n                var response = await fetch(this.ipfsPrefix + productHash)\n\t\t\t\tvar data\n\n\t\t\t\ttry {\n                    data = await response.json()\n                    console.log(data)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tif (data) {\n\t\t\t\t\treturn data.imageLinks[0].link\n\t\t\t\t} else {\n                    return ''\n                }\n        },\n    },\n\n    created() {\n        this.retrieveOrders()\n    }\n\n}\n\n</script>\n\n<style scoped>\n    #cards {\n        margin-top: 5rem;\n    }\n</style>\n","<template>\n\n    <div id=\"main\">\n        <SellNavigation />\n        \n        <section id=\"order-bar\">\n            <span class=\"tick\" v-if=\"initStatus==2\"> &#9989; </span>\n            <span> <img :src=\"imgsrc\" /> </span>\n            <span class=\"details\"> Order ID: <p>{{orderId}}</p> </span>\n            <span class=\"details\"> productHash: <p>{{productHash}}</p> </span>\n            <span class=\"details\"> BuyerAddress: <p>{{buyerAddress}}</p> </span>\n            <span class=\"details\"> Quantity: <p>{{quantity}}</p> </span>\n            <span class=\"details\"> Paid: <p>{{paid}}</p> </span>\n            <span class=\"details\"> Status: <p> {{statusDescription[status]}} </p>  </span>\n            <span class=\"details\"> \n                <dropdown\n\t\t\t\t\t\t\tclass=\"my-dropdown-toggle\"\n\t\t\t\t\t\t\t:options=\"arrayOfObjects\"\n\t\t\t\t\t\t\t:selected=\"object\"\n\t\t\t\t\t\t\tv-on:updateOption=\"methodToRunOnSelect\"\n\t\t\t\t\t\t\t:placeholder=\"'Select an Item'\"\n\t\t\t\t\t\t\t:closeOnOutsideClick=\"boolean\"\n\t\t\t\t>\n\t\t\t\t</dropdown>\n                <button @click=\"updateStatus\"> Update Status </button>\n            </span>\n            <span class=\"details\"> Delivery-Address: <p>{{deliveryAddress}}</p> </span>\n        </section>\n\n    </div>\n    \n    \n</template>\n\n\n<script>\nimport dropdown from 'vue-dropdowns'\n\n\nexport default {\n\n    components: {\n        dropdown\n    },\n\n    emits: ['order-updated'],\n\n    props: {\n        imgsrc: String,\n        productHash: String,\n        buyerAddress: String,\n        quantity: String,\n        paid: Number,\n        deliveryAddress: String,\n        initStatus: Number,\n        orderId: Number\n    },\n\n    data() {\n        return {\n            statusDescription: ['to be dispatched', 'dispatched, on the way', 'delivered'],\n            statusCode: [0, 1, 2],\n            isDisabled: true,\n            status: this.initStatus,\n            arrayOfObjects: [{ name: 'to be dispatched', code:0}, {name: 'dispatched, on the way', code:1}, {name: 'delivered', code:2}],\n\t\t\tobject: {\n                name: 'to be dispatched',\n                code:0\n\t\t\t},\n        }\n    },\n\n\n    computed: {\n\t    selectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async updateStatus(event) {\n            if (this.selectedAccount) {\n            \tthis.$swal\n\t\t\t\t\t.fire({\n\t\t\t\t\t\ttitle: 'Update Product status',\n\t\t\t\t\t\ttext: 'Are you sure you want to update the product status ?',\n\t\t\t\t\t\ticon: 'question',\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tconfirmButtonColor: 'blueviolet',\n\t\t\t\t\t\tcancelButtonColor: 'orange',\n\t\t\t\t\t\tconfirmButtonText: 'Yes, Upadate Status',\n\t\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t\t})\n\t\t\t\t\t.then(async (result) => {\n\t\t\t\t\t\tif (result.isConfirmed) {\n                                this.status = event.target.value;\n                                // issue an update request everytime clicked a radio button\n                                console.log(this.status)\n                                console.log(this.statusDescription[this.status])\n                                let payload = {\n                                    creator: this.buyerAddress,\n                                    id: this.orderId,\n                                    producthash: this.productHash,\n                                    seller: this.selectedAccount,\n                                    quantity: this.quantity,\n                                    status: this.object.code,\n                                    paid: 1,\n                                    deliveryaddress: this.deliveryAddress\n                                }\n\n                                console.log(payload)\n\n                                let res = await this.$store.dispatch('sap200.redduct.redduct/sendMsgUpdateOrder', {value: payload, fee:[]})\n                                console.log(res)\n                                await this.$swal.fire({\n\t\t\t\t\t\t\t\t    title: 'Transaction Log',\n\t\t\t\t\t\t\t\t    text: JSON.stringify(res),\n\t\t\t\t\t\t\t\t    icon: 'info',\n\t\t\t\t\t\t\t    \tposition: 'bottom-end'\n                            })\n\n                            if (this.object.code == 2) {\n                                 await this.$swal.fire({\n\t\t\t\t\t\t\t\t    title: 'Transaction Log ! Order Fullfilled',\n\t\t\t\t\t\t\t\t    text: JSON.stringify(res),\n\t\t\t\t\t\t\t\t    icon: 'info',\n\t\t\t\t\t\t\t    \tposition: 'bottom-end'\n                                })\n\n                                await this.$emit('order-updated')\n\n                            }\n\n                        } else {\n                            this.$swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Cancelled',\n\t\t\t\t\t\t\t\ttext: \"You don't want update order status\",\n\t\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\t\tposition: 'bottom-end'\n                            });\n                        }\n                    });\n                } else {\n                    this.$swal.fire({\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\ttitle: 'Wallet Not Connected',\n\t\t\t\t\ttext: 'Please sign in and connect to your wallet.',\n\t\t\t\t\tposition: 'bottom-end'\n\t\t\t\t})\n                } \n        },\n\n        methodToRunOnSelect(payload) {\n            this.object = payload\n            console.log(this.object)\n            console.log(this.deliveryAddress)\n        },\n    },\n}\n</script>\n\n\n\n<style scoped>\n\n    #order-bar {\n        color: blueviolet;\n        padding: 1rem;\n        font-size: 1rem;\n        display: flex;\n        justify-content: left;\n        align-items: left;\n        background-color: white;\n\n        box-shadow: 0 2px 8px 0 gray;\n        margin: 1rem auto;\n        border-radius: 1px;\n        padding: 1rem;\n        width: 95%;\n        max-width: 100%;\n        overflow: scroll;\n    }\n\n    img {\n        width: 150px;\n        height: 150px;\n    }\n\n    .details {\n        margin-right: 1rem;\n        font-size: 1rem;\n        padding: 2rem;\n    }\n\n    .tick {\n        font-size: 2rem;\n    }\n\n\n</style>","import { render } from \"./ManageCard.vue?vue&type=template&id=7b89fe00&scoped=true\"\nimport script from \"./ManageCard.vue?vue&type=script&lang=js\"\nexport * from \"./ManageCard.vue?vue&type=script&lang=js\"\n\nimport \"./ManageCard.vue?vue&type=style&index=0&id=7b89fe00&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-7b89fe00\"\n\nexport default script","import { render } from \"./ManageOrders.vue?vue&type=template&id=5d52c78a&scoped=true\"\nimport script from \"./ManageOrders.vue?vue&type=script&lang=js\"\nexport * from \"./ManageOrders.vue?vue&type=script&lang=js\"\n\nimport \"./ManageOrders.vue?vue&type=style&index=0&id=5d52c78a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5d52c78a\"\n\nexport default script","<template>\n\n    <div id=\"main\">\n        <SellNavigation />\n\n        <section id=\"cards\">\n            <OrderCard v-for=\"order in orderList\" :key=\"order.id\"\n                :imgsrc=\"order.image\"\n                :productHash=\"order.obj.producthash\"\n                :buyerAddress=\"order.obj.creator\"\n                :quantity=\"order.obj.quantity\"\n                :paid=\"order.obj.paid\"\n                :deliveryAddress=\"order.obj.deliveryaddress\"\n                :initStatus=\"order.obj.status\"\n                :orderId=\"order.obj.id\"\n                @order-updated=\"retrieveOrders\"\n            />\n        </section>\n\n    </div>\n    \n    \n</template>\n\n<script>\nimport OrderCard from '../utils/OrderCard.vue';\nimport SellNavigation from './SellNavigation.vue'\n\nexport default {\n\n    components: {\n\n        OrderCard,\n        SellNavigation\n    },\n\n    data() {\n        return {\n            orderList: [],\n            orderWithDelivery: [],\n            modulePath: 'sap200.redduct.redduct',\n            moduleType: 'Order',\n            ipfsPrefix: 'https://ipfs.io/ipfs/',\n        };\n    },\n\n    computed: {\n\t\tselectedAccount() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t},\n\n    methods: {\n        async retrieveOrders() {\n\n            if (!this.selectedAccount) {\n                return;\n            }\n            \n            // retrieve order\n            let res = await this.$store.dispatch(this.modulePath + '/Query' + this.moduleType + 'All', {options: {}});\n            let new_res = await res.Order.filter((v) => v.seller == this.selectedAccount);\n            new_res = await new_res.filter((v) => v.status == 2);\n\n            // retrieve delivery address\n            for (var i = 0; i < await new_res.length; i++) {\n                // get the imageLink\n                let image = await this.getProductImage(new_res[i].producthash)\n\n\n                await this.orderList.push({obj: new_res[i], image: image});\n                await console.log(this.orderList);\n            }\n\n\n\n            await console.log(this.orderList);\n        },\n\n        async getProductImage(productHash) {\n                var response = await fetch(this.ipfsPrefix + productHash)\n\t\t\t\tvar data\n\n\t\t\t\ttry {\n                    data = await response.json()\n                    console.log(data)\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tif (data) {\n\t\t\t\t\treturn data.imageLinks[0].link\n\t\t\t\t} else {\n                    return ''\n                }\n        },\n    },\n\n    created() {\n        this.retrieveOrders()\n    }\n\n}\n\n</script>\n\n<style scoped>\n    #cards {\n        margin-top: 5rem;\n    }\n</style>\n","import { render } from \"./DoneOrders.vue?vue&type=template&id=31a268aa&scoped=true\"\nimport script from \"./DoneOrders.vue?vue&type=script&lang=js\"\nexport * from \"./DoneOrders.vue?vue&type=script&lang=js\"\n\nimport \"./DoneOrders.vue?vue&type=style&index=0&id=31a268aa&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-31a268aa\"\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\nimport FrontPage from '@/components/utils/FrontPage.vue'\nimport SellNavigation from '@/components/sell/SellNavigation.vue'\nimport CreateProduct from '@/components/sell/CreateProduct.vue'\nimport ManageProduct from '@/components/sell/ManageProduct.vue'\nimport BuyProduct from '@/components/buy/BuyProduct.vue'\nimport ProductDetails from '@/components/buy/ProductDetails.vue'\nimport CartDetails from '@/components/buy/CartDetails.vue'\nimport OrderPage from '@/components/order/OrderPage.vue'\nimport MyOrders from '@/components/order/MyOrders.vue'\nimport ManageOrders from '@/components/sell/ManageOrders.vue'\nimport DoneOrders from '@/components/sell/DoneOrders.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: FrontPage\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers },\n\t{ path: '/wallet', component: Index},\n\t{ path: '/sell', component: SellNavigation},\n\t{ path: '/sell/CreateProduct', component: CreateProduct},\n\t{ path: '/sell/manageProduct', component: ManageProduct},\n\t{ path: '/buy/BuyProduct', component: BuyProduct},\n\t{ path: '/buy/productDetails', name: \"ProductDetails\", component: ProductDetails, props: true},\n\t{ path: '/cart/cartDetails', component: CartDetails},\n\t{ path: '/order/orderPage', name: \"OrderPage\", component: OrderPage, props: true},\n\t{ path: '/myorders', component: MyOrders},\n\t{ path: '/sell/manageOrders', component: ManageOrders},\n\t{ path: '/sell/doneOrders', component: DoneOrders}\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\nimport VueSweetalert2 from 'vue-sweetalert2'\nimport 'sweetalert2/dist/sweetalert2.min.css'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(VueSweetalert2)\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./DoneOrders.vue?vue&type=style&index=0&id=31a268aa&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ProductCard.vue?vue&type=style&index=0&id=2a637136&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ProductDetails.vue?vue&type=style&index=0&id=6c2b8324&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RouteLink.vue?vue&type=style&index=0&id=3b80b4bc&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'sap200.redduct.redduct';\nconst baseOrder = { creator: '', id: 0, producthash: '', seller: '', deliveryaddress: '', quantity: 0, status: 0, paid: 0, totalamount: 0 };\nexport const Order = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.producthash !== '') {\n            writer.uint32(26).string(message.producthash);\n        }\n        if (message.seller !== '') {\n            writer.uint32(34).string(message.seller);\n        }\n        if (message.deliveryaddress !== '') {\n            writer.uint32(42).string(message.deliveryaddress);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(48).int32(message.quantity);\n        }\n        if (message.status !== 0) {\n            writer.uint32(56).int32(message.status);\n        }\n        if (message.paid !== 0) {\n            writer.uint32(64).int32(message.paid);\n        }\n        if (message.totalamount !== 0) {\n            writer.uint32(72).int32(message.totalamount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOrder };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.producthash = reader.string();\n                    break;\n                case 4:\n                    message.seller = reader.string();\n                    break;\n                case 5:\n                    message.deliveryaddress = reader.string();\n                    break;\n                case 6:\n                    message.quantity = reader.int32();\n                    break;\n                case 7:\n                    message.status = reader.int32();\n                    break;\n                case 8:\n                    message.paid = reader.int32();\n                    break;\n                case 9:\n                    message.totalamount = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = String(object.producthash);\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = String(object.seller);\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.deliveryaddress !== undefined && object.deliveryaddress !== null) {\n            message.deliveryaddress = String(object.deliveryaddress);\n        }\n        else {\n            message.deliveryaddress = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = Number(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.paid !== undefined && object.paid !== null) {\n            message.paid = Number(object.paid);\n        }\n        else {\n            message.paid = 0;\n        }\n        if (object.totalamount !== undefined && object.totalamount !== null) {\n            message.totalamount = Number(object.totalamount);\n        }\n        else {\n            message.totalamount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.producthash !== undefined && (obj.producthash = message.producthash);\n        message.seller !== undefined && (obj.seller = message.seller);\n        message.deliveryaddress !== undefined && (obj.deliveryaddress = message.deliveryaddress);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.status !== undefined && (obj.status = message.status);\n        message.paid !== undefined && (obj.paid = message.paid);\n        message.totalamount !== undefined && (obj.totalamount = message.totalamount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = object.producthash;\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = object.seller;\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.deliveryaddress !== undefined && object.deliveryaddress !== null) {\n            message.deliveryaddress = object.deliveryaddress;\n        }\n        else {\n            message.deliveryaddress = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.paid !== undefined && object.paid !== null) {\n            message.paid = object.paid;\n        }\n        else {\n            message.paid = 0;\n        }\n        if (object.totalamount !== undefined && object.totalamount !== null) {\n            message.totalamount = object.totalamount;\n        }\n        else {\n            message.totalamount = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CartDetails.vue?vue&type=style&index=0&id=302a5b8f&scoped=true&lang=css\"","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CreateProduct.vue?vue&type=style&index=0&id=b9b6c246&scoped=true&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./UtilityBar.vue?vue&type=style&index=0&id=1fd7212e&scoped=true&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ManageOrders.vue?vue&type=style&index=0&id=5d52c78a&scoped=true&lang=css\"","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./MyOrders.vue?vue&type=style&index=0&id=8323d26e&scoped=true&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BuyProduct.vue?vue&type=style&index=0&id=4fd0f194&scoped=true&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SellNavigation.vue?vue&type=style&index=0&id=c9d6df54&scoped=true&lang=css\"","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'sap200.redduct.redduct';\nconst baseMsgCreateOrder = { creator: '', producthash: '', seller: '', deliveryaddress: '', quantity: 0, status: 0, paid: 0, totalamount: 0 };\nexport const MsgCreateOrder = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.producthash !== '') {\n            writer.uint32(18).string(message.producthash);\n        }\n        if (message.seller !== '') {\n            writer.uint32(26).string(message.seller);\n        }\n        if (message.deliveryaddress !== '') {\n            writer.uint32(34).string(message.deliveryaddress);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(40).int32(message.quantity);\n        }\n        if (message.status !== 0) {\n            writer.uint32(48).int32(message.status);\n        }\n        if (message.paid !== 0) {\n            writer.uint32(56).int32(message.paid);\n        }\n        if (message.totalamount !== 0) {\n            writer.uint32(64).int32(message.totalamount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateOrder };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.producthash = reader.string();\n                    break;\n                case 3:\n                    message.seller = reader.string();\n                    break;\n                case 4:\n                    message.deliveryaddress = reader.string();\n                    break;\n                case 5:\n                    message.quantity = reader.int32();\n                    break;\n                case 6:\n                    message.status = reader.int32();\n                    break;\n                case 7:\n                    message.paid = reader.int32();\n                    break;\n                case 8:\n                    message.totalamount = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = String(object.producthash);\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = String(object.seller);\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.deliveryaddress !== undefined && object.deliveryaddress !== null) {\n            message.deliveryaddress = String(object.deliveryaddress);\n        }\n        else {\n            message.deliveryaddress = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = Number(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.paid !== undefined && object.paid !== null) {\n            message.paid = Number(object.paid);\n        }\n        else {\n            message.paid = 0;\n        }\n        if (object.totalamount !== undefined && object.totalamount !== null) {\n            message.totalamount = Number(object.totalamount);\n        }\n        else {\n            message.totalamount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.producthash !== undefined && (obj.producthash = message.producthash);\n        message.seller !== undefined && (obj.seller = message.seller);\n        message.deliveryaddress !== undefined && (obj.deliveryaddress = message.deliveryaddress);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.status !== undefined && (obj.status = message.status);\n        message.paid !== undefined && (obj.paid = message.paid);\n        message.totalamount !== undefined && (obj.totalamount = message.totalamount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = object.producthash;\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = object.seller;\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.deliveryaddress !== undefined && object.deliveryaddress !== null) {\n            message.deliveryaddress = object.deliveryaddress;\n        }\n        else {\n            message.deliveryaddress = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.paid !== undefined && object.paid !== null) {\n            message.paid = object.paid;\n        }\n        else {\n            message.paid = 0;\n        }\n        if (object.totalamount !== undefined && object.totalamount !== null) {\n            message.totalamount = object.totalamount;\n        }\n        else {\n            message.totalamount = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateOrderResponse = { id: 0 };\nexport const MsgCreateOrderResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateOrderResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateOrderResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateOrderResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateOrder = { creator: '', id: 0, producthash: '', seller: '', deliveryaddress: '', quantity: 0, status: 0, paid: 0, totalamount: 0 };\nexport const MsgUpdateOrder = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.producthash !== '') {\n            writer.uint32(26).string(message.producthash);\n        }\n        if (message.seller !== '') {\n            writer.uint32(34).string(message.seller);\n        }\n        if (message.deliveryaddress !== '') {\n            writer.uint32(42).string(message.deliveryaddress);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(48).int32(message.quantity);\n        }\n        if (message.status !== 0) {\n            writer.uint32(56).int32(message.status);\n        }\n        if (message.paid !== 0) {\n            writer.uint32(64).int32(message.paid);\n        }\n        if (message.totalamount !== 0) {\n            writer.uint32(72).int32(message.totalamount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateOrder };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.producthash = reader.string();\n                    break;\n                case 4:\n                    message.seller = reader.string();\n                    break;\n                case 5:\n                    message.deliveryaddress = reader.string();\n                    break;\n                case 6:\n                    message.quantity = reader.int32();\n                    break;\n                case 7:\n                    message.status = reader.int32();\n                    break;\n                case 8:\n                    message.paid = reader.int32();\n                    break;\n                case 9:\n                    message.totalamount = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = String(object.producthash);\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = String(object.seller);\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.deliveryaddress !== undefined && object.deliveryaddress !== null) {\n            message.deliveryaddress = String(object.deliveryaddress);\n        }\n        else {\n            message.deliveryaddress = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = Number(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.paid !== undefined && object.paid !== null) {\n            message.paid = Number(object.paid);\n        }\n        else {\n            message.paid = 0;\n        }\n        if (object.totalamount !== undefined && object.totalamount !== null) {\n            message.totalamount = Number(object.totalamount);\n        }\n        else {\n            message.totalamount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.producthash !== undefined && (obj.producthash = message.producthash);\n        message.seller !== undefined && (obj.seller = message.seller);\n        message.deliveryaddress !== undefined && (obj.deliveryaddress = message.deliveryaddress);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.status !== undefined && (obj.status = message.status);\n        message.paid !== undefined && (obj.paid = message.paid);\n        message.totalamount !== undefined && (obj.totalamount = message.totalamount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = object.producthash;\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = object.seller;\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.deliveryaddress !== undefined && object.deliveryaddress !== null) {\n            message.deliveryaddress = object.deliveryaddress;\n        }\n        else {\n            message.deliveryaddress = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.paid !== undefined && object.paid !== null) {\n            message.paid = object.paid;\n        }\n        else {\n            message.paid = 0;\n        }\n        if (object.totalamount !== undefined && object.totalamount !== null) {\n            message.totalamount = object.totalamount;\n        }\n        else {\n            message.totalamount = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateOrderResponse = {};\nexport const MsgUpdateOrderResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateOrderResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateOrderResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateOrderResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteOrder = { creator: '', id: 0 };\nexport const MsgDeleteOrder = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteOrder };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteOrder };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteOrderResponse = {};\nexport const MsgDeleteOrderResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteOrderResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteOrderResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteOrderResponse };\n        return message;\n    }\n};\nconst baseMsgCreateCartitem = { creator: '', producthash: '', seller: '', price: 0, quantity: 0 };\nexport const MsgCreateCartitem = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.producthash !== '') {\n            writer.uint32(18).string(message.producthash);\n        }\n        if (message.seller !== '') {\n            writer.uint32(26).string(message.seller);\n        }\n        if (message.price !== 0) {\n            writer.uint32(32).int32(message.price);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(40).int32(message.quantity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateCartitem };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.producthash = reader.string();\n                    break;\n                case 3:\n                    message.seller = reader.string();\n                    break;\n                case 4:\n                    message.price = reader.int32();\n                    break;\n                case 5:\n                    message.quantity = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = String(object.producthash);\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = String(object.seller);\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.producthash !== undefined && (obj.producthash = message.producthash);\n        message.seller !== undefined && (obj.seller = message.seller);\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = object.producthash;\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = object.seller;\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateCartitemResponse = { id: 0 };\nexport const MsgCreateCartitemResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateCartitemResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateCartitemResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateCartitemResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateCartitem = { creator: '', id: 0, producthash: '', seller: '', price: 0, quantity: 0 };\nexport const MsgUpdateCartitem = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.producthash !== '') {\n            writer.uint32(26).string(message.producthash);\n        }\n        if (message.seller !== '') {\n            writer.uint32(34).string(message.seller);\n        }\n        if (message.price !== 0) {\n            writer.uint32(40).int32(message.price);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(48).int32(message.quantity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateCartitem };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.producthash = reader.string();\n                    break;\n                case 4:\n                    message.seller = reader.string();\n                    break;\n                case 5:\n                    message.price = reader.int32();\n                    break;\n                case 6:\n                    message.quantity = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = String(object.producthash);\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = String(object.seller);\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.producthash !== undefined && (obj.producthash = message.producthash);\n        message.seller !== undefined && (obj.seller = message.seller);\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.producthash !== undefined && object.producthash !== null) {\n            message.producthash = object.producthash;\n        }\n        else {\n            message.producthash = '';\n        }\n        if (object.seller !== undefined && object.seller !== null) {\n            message.seller = object.seller;\n        }\n        else {\n            message.seller = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateCartitemResponse = {};\nexport const MsgUpdateCartitemResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateCartitemResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateCartitemResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateCartitemResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteCartitem = { creator: '', id: 0 };\nexport const MsgDeleteCartitem = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteCartitem };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteCartitem };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteCartitemResponse = {};\nexport const MsgDeleteCartitemResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteCartitemResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteCartitemResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteCartitemResponse };\n        return message;\n    }\n};\nconst baseMsgCreateProduct = { creator: '', ipfshash: '', quantity: 0 };\nexport const MsgCreateProduct = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.ipfshash !== '') {\n            writer.uint32(18).string(message.ipfshash);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(24).int32(message.quantity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateProduct };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.ipfshash = reader.string();\n                    break;\n                case 3:\n                    message.quantity = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.ipfshash !== undefined && object.ipfshash !== null) {\n            message.ipfshash = String(object.ipfshash);\n        }\n        else {\n            message.ipfshash = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.ipfshash !== undefined && (obj.ipfshash = message.ipfshash);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.ipfshash !== undefined && object.ipfshash !== null) {\n            message.ipfshash = object.ipfshash;\n        }\n        else {\n            message.ipfshash = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateProductResponse = { id: 0 };\nexport const MsgCreateProductResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateProductResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateProductResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateProductResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateProduct = { creator: '', id: 0, ipfshash: '', quantity: 0 };\nexport const MsgUpdateProduct = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.ipfshash !== '') {\n            writer.uint32(26).string(message.ipfshash);\n        }\n        if (message.quantity !== 0) {\n            writer.uint32(32).int32(message.quantity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateProduct };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.ipfshash = reader.string();\n                    break;\n                case 4:\n                    message.quantity = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.ipfshash !== undefined && object.ipfshash !== null) {\n            message.ipfshash = String(object.ipfshash);\n        }\n        else {\n            message.ipfshash = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = Number(object.quantity);\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.ipfshash !== undefined && (obj.ipfshash = message.ipfshash);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.ipfshash !== undefined && object.ipfshash !== null) {\n            message.ipfshash = object.ipfshash;\n        }\n        else {\n            message.ipfshash = '';\n        }\n        if (object.quantity !== undefined && object.quantity !== null) {\n            message.quantity = object.quantity;\n        }\n        else {\n            message.quantity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateProductResponse = {};\nexport const MsgUpdateProductResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateProductResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateProductResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateProductResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteProduct = { creator: '', id: 0 };\nexport const MsgDeleteProduct = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteProduct };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteProduct };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteProductResponse = {};\nexport const MsgDeleteProductResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteProductResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteProductResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteProductResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateOrder(request) {\n        const data = MsgCreateOrder.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'CreateOrder', data);\n        return promise.then((data) => MsgCreateOrderResponse.decode(new Reader(data)));\n    }\n    UpdateOrder(request) {\n        const data = MsgUpdateOrder.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'UpdateOrder', data);\n        return promise.then((data) => MsgUpdateOrderResponse.decode(new Reader(data)));\n    }\n    DeleteOrder(request) {\n        const data = MsgDeleteOrder.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'DeleteOrder', data);\n        return promise.then((data) => MsgDeleteOrderResponse.decode(new Reader(data)));\n    }\n    CreateCartitem(request) {\n        const data = MsgCreateCartitem.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'CreateCartitem', data);\n        return promise.then((data) => MsgCreateCartitemResponse.decode(new Reader(data)));\n    }\n    UpdateCartitem(request) {\n        const data = MsgUpdateCartitem.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'UpdateCartitem', data);\n        return promise.then((data) => MsgUpdateCartitemResponse.decode(new Reader(data)));\n    }\n    DeleteCartitem(request) {\n        const data = MsgDeleteCartitem.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'DeleteCartitem', data);\n        return promise.then((data) => MsgDeleteCartitemResponse.decode(new Reader(data)));\n    }\n    CreateProduct(request) {\n        const data = MsgCreateProduct.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'CreateProduct', data);\n        return promise.then((data) => MsgCreateProductResponse.decode(new Reader(data)));\n    }\n    UpdateProduct(request) {\n        const data = MsgUpdateProduct.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'UpdateProduct', data);\n        return promise.then((data) => MsgUpdateProductResponse.decode(new Reader(data)));\n    }\n    DeleteProduct(request) {\n        const data = MsgDeleteProduct.encode(request).finish();\n        const promise = this.rpc.request('sap200.redduct.redduct.Msg', 'DeleteProduct', data);\n        return promise.then((data) => MsgDeleteProductResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RedductLogo.vue?vue&type=style&index=0&id=fd3f2194&scoped=true&lang=css\"","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./FrontPage.vue?vue&type=style&index=0&id=13a0f6f0&scoped=true&lang=css\"","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./OrderCard.vue?vue&type=style&index=0&id=47ea6972&scoped=true&lang=css\""],"sourceRoot":""}