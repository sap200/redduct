// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: redduct/cartitem.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Cartitem struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Producthash string `protobuf:"bytes,3,opt,name=producthash,proto3" json:"producthash,omitempty"`
	Seller      string `protobuf:"bytes,4,opt,name=seller,proto3" json:"seller,omitempty"`
	Price       int32  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Quantity    int32  `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (m *Cartitem) Reset()         { *m = Cartitem{} }
func (m *Cartitem) String() string { return proto.CompactTextString(m) }
func (*Cartitem) ProtoMessage()    {}
func (*Cartitem) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b80a1cb5bb4824, []int{0}
}
func (m *Cartitem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Cartitem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Cartitem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Cartitem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cartitem.Merge(m, src)
}
func (m *Cartitem) XXX_Size() int {
	return m.Size()
}
func (m *Cartitem) XXX_DiscardUnknown() {
	xxx_messageInfo_Cartitem.DiscardUnknown(m)
}

var xxx_messageInfo_Cartitem proto.InternalMessageInfo

func (m *Cartitem) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Cartitem) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Cartitem) GetProducthash() string {
	if m != nil {
		return m.Producthash
	}
	return ""
}

func (m *Cartitem) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *Cartitem) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Cartitem) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterType((*Cartitem)(nil), "sap200.redduct.redduct.Cartitem")
}

func init() { proto.RegisterFile("redduct/cartitem.proto", fileDescriptor_b8b80a1cb5bb4824) }

var fileDescriptor_b8b80a1cb5bb4824 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x4a, 0x4d, 0x49,
	0x29, 0x4d, 0x2e, 0xd1, 0x4f, 0x4e, 0x2c, 0x2a, 0xc9, 0x2c, 0x49, 0xcd, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x2b, 0x4e, 0x2c, 0x30, 0x32, 0x30, 0xd0, 0x83, 0x4a, 0xc3, 0x68, 0x29,
	0x91, 0xf4, 0xfc, 0xf4, 0x7c, 0xb0, 0x12, 0x7d, 0x10, 0x0b, 0xa2, 0x5a, 0x69, 0x01, 0x23, 0x17,
	0x87, 0x33, 0xd4, 0x00, 0x21, 0x09, 0x2e, 0xf6, 0xe4, 0xa2, 0xd4, 0xc4, 0x92, 0xfc, 0x22, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x88, 0x8f, 0x8b, 0x29, 0x33, 0x45, 0x82, 0x49,
	0x81, 0x51, 0x83, 0x25, 0x88, 0x29, 0x33, 0x45, 0x48, 0x81, 0x8b, 0xbb, 0xa0, 0x28, 0x1f, 0x64,
	0x6e, 0x46, 0x62, 0x71, 0x86, 0x04, 0x33, 0x58, 0x35, 0xb2, 0x90, 0x90, 0x18, 0x17, 0x5b, 0x71,
	0x6a, 0x4e, 0x4e, 0x6a, 0x91, 0x04, 0x0b, 0x58, 0x12, 0xca, 0x13, 0x12, 0xe1, 0x62, 0x2d, 0x28,
	0xca, 0x4c, 0x4e, 0x95, 0x60, 0x55, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0x70, 0x84, 0xa4, 0xb8, 0x38,
	0x0a, 0x4b, 0x13, 0xf3, 0x4a, 0x32, 0x4b, 0x2a, 0x25, 0xd8, 0xc0, 0x12, 0x70, 0xbe, 0x93, 0xf3,
	0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c,
	0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x69, 0xa6, 0x67, 0x96, 0x64, 0x94,
	0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x43, 0x7c, 0xad, 0x0f, 0x0b, 0x94, 0x0a, 0x38, 0xab, 0xa4,
	0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d, 0xec, 0x5d, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a,
	0x69, 0x4f, 0x4f, 0x36, 0x01, 0x00, 0x00,
}

func (m *Cartitem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Cartitem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Cartitem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Quantity != 0 {
		i = encodeVarintCartitem(dAtA, i, uint64(m.Quantity))
		i--
		dAtA[i] = 0x30
	}
	if m.Price != 0 {
		i = encodeVarintCartitem(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Seller) > 0 {
		i -= len(m.Seller)
		copy(dAtA[i:], m.Seller)
		i = encodeVarintCartitem(dAtA, i, uint64(len(m.Seller)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Producthash) > 0 {
		i -= len(m.Producthash)
		copy(dAtA[i:], m.Producthash)
		i = encodeVarintCartitem(dAtA, i, uint64(len(m.Producthash)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintCartitem(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintCartitem(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCartitem(dAtA []byte, offset int, v uint64) int {
	offset -= sovCartitem(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Cartitem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovCartitem(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovCartitem(uint64(m.Id))
	}
	l = len(m.Producthash)
	if l > 0 {
		n += 1 + l + sovCartitem(uint64(l))
	}
	l = len(m.Seller)
	if l > 0 {
		n += 1 + l + sovCartitem(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovCartitem(uint64(m.Price))
	}
	if m.Quantity != 0 {
		n += 1 + sovCartitem(uint64(m.Quantity))
	}
	return n
}

func sovCartitem(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCartitem(x uint64) (n int) {
	return sovCartitem(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Cartitem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCartitem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Cartitem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Cartitem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCartitem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCartitem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Producthash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCartitem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCartitem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Producthash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCartitem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCartitem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Seller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Quantity", wireType)
			}
			m.Quantity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Quantity |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCartitem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCartitem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCartitem(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCartitem
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCartitem
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCartitem
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCartitem
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCartitem
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCartitem        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCartitem          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCartitem = fmt.Errorf("proto: unexpected end of group")
)
